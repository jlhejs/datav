// env=undefined => env=publish 
Cube("datav:/com/guston-3d-layer-light/0.0.5/LightLayer.js",["datav:/npm/bcore/0.0.21/event","datav:/npm/safely-merge/1.0.0","datav:/npm/chroma-js/1.3.4"],function(a,b,c){const d=c("datav:/npm/bcore/0.0.21/event"),e=c("datav:/npm/safely-merge/1.0.0"),f=c("datav:/npm/chroma-js/1.3.4");return a.exports=function(a){const b={},c=a.THREE;return class extends d{constructor(c){super(),c=e(b,c),this.options=e(this.options,c),this.init(a)}init(a){this.dgl=a}setData(a){this.draw(a)}updateOptions(a){this.options=e(this.options,a),this.clearMesh(),this.draw()}remove(){this.clearMesh()}draw(){this.createMesh(),this.addMeshToScene()}createMesh(){"Directional"==this.options.lightType?(this.mesh=this.createDirectionalLight(),this.lightHelper=this.createDirectionalLightHelper()):"Point"==this.options.lightType?(this.mesh=this.createPointLight(),this.lightIndicator=this.createLightIndicator()):"Spot"==this.options.lightType&&(this.mesh=this.createSpotLight(),this.lightHelper=this.createSpotLightHelper(),this.lightIndicator=this.createLightIndicator()),this.mesh.position.set(this.options.position.x,this.options.position.y,this.options.position.z),this.lightIndicator&&this.lightIndicator.position.set(this.options.position.x,this.options.position.y,this.options.position.z)}createDirectionalLight(){let a=new c.DirectionalLight(this.options.directionalLightConfig.color,this.options.directionalLightConfig.intensity);return a.target.position.set(this.options.directionalLightConfig.target.x,this.options.directionalLightConfig.target.y,this.options.directionalLightConfig.target.z),this.options.directionalLightConfig.castShadow&&(a.castShadow=!0,a.shadow.bias=this.options.directionalLightConfig.shadow.bias,a.shadow.camera.near=this.options.directionalLightConfig.shadow.cameraNear,a.shadow.camera.far=this.options.directionalLightConfig.shadow.cameraFar,a.shadow.camera.right=this.options.directionalLightConfig.shadow.cameraRight,a.shadow.camera.left=this.options.directionalLightConfig.shadow.cameraLeft,a.shadow.camera.top=this.options.directionalLightConfig.shadow.cameraTop,a.shadow.camera.bottom=this.options.directionalLightConfig.shadow.cameraBottom,a.shadow.mapSize.width=this.options.directionalLightConfig.shadow.mapSizeWidth,a.shadow.mapSize.height=this.options.directionalLightConfig.shadow.mapSizeHeight),a.visible=this.options.visible,a}createDirectionalLightHelper(){let a="";return this.options.directionalLightConfig.castShadow&&this.options.directionalLightConfig.enableShadowHelper&&(a=new c.CameraHelper(this.mesh.shadow.camera)),a}createPointLight(){let a=new c.PointLight(this.options.pointLightConfig.color,this.options.pointLightConfig.intensity,this.options.pointLightConfig.distance,this.options.pointLightConfig.decay);return a.visible=this.options.visible,a}createSpotLight(){let a=new c.SpotLight(this.options.spotLightConfig.color,this.options.spotLightConfig.intensity,this.options.spotLightConfig.distance,this.options.spotLightConfig.angle,this.options.spotLightConfig.penumbra,this.options.spotLightConfig.decay);return a.target.position.set(this.options.spotLightConfig.target.x,this.options.spotLightConfig.target.y,this.options.spotLightConfig.target.z),this.options.spotLightConfig.castShadow&&(a.castShadow=!0,a.shadow.camera.near=this.options.spotLightConfig.shadow.cameraNear,a.shadow.camera.far=this.options.spotLightConfig.shadow.cameraFar,a.shadow.mapSize.width=this.options.spotLightConfig.shadow.mapSizeWidth,a.shadow.mapSize.height=this.options.spotLightConfig.shadow.mapSizeHeight),a.visible=this.options.visible,a}createSpotLightHelper(){let a="";return this.options.spotLightConfig.castShadow&&this.options.spotLightConfig.enableShadowHelper&&(a=new c.CameraHelper(this.mesh.shadow.camera)),a}createLightIndicator(){let a=new c.IcosahedronGeometry(2,2),b=new c.MeshBasicMaterial({color:"#ffff00"}),d=new c.Mesh(a,b);return d.visible=this.options.indicatorVisible,d}addMeshToScene(){this.mesh&&this.dgl.scene.add(this.mesh),this.mesh&&this.dgl.scene.add(this.mesh.target),this.lightHelper&&this.dgl.scene.add(this.lightHelper),this.lightIndicator&&this.dgl.scene.add(this.lightIndicator)}clearMesh(){this.mesh&&this.dgl.scene.remove(this.mesh),this.mesh=null,this.lightHelper&&this.dgl.scene.remove(this.lightHelper),this.lightHelper=null,this.lightIndicator&&this.dgl.scene.remove(this.lightIndicator),this.lightIndicator=null}}},a.exports});;
Cube("datav:/com/guston-3d-layer-light/0.0.5",["datav:/npm/bcore/0.0.21/event","datav:/npm/safely-merge/1.0.0"],function(a,b,c){const d=c("datav:/npm/bcore/0.0.21/event"),e=c("datav:/npm/safely-merge/1.0.0"),f=c("datav:/com/guston-3d-layer-light/0.0.5/LightLayer.js"),g={};return a.exports=class extends d{constructor(a,b){super(),this.apis=b.apis,this._data=null,this.config=b}init(a){let b=this.getOptions(),c=f(a);this.layer=new c(b)}addTo(a){this.init(a)}getOptions(){return this.config=e(g,this.config),this.config}data(a){return console.log("data called in index.js"),a&&(this._data=a),this._data}remove(){this.layer&&this.layer.remove&&this.layer.remove(),this.layer=null,this._data=null}render(a){this.layer.setData(a)}updateOptions(a){this.config=e(this.config,a),a=this.getOptions(),this.layer&&this.layer.updateOptions(a)}},a.exports});