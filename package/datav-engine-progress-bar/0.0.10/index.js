// env=undefined => env=publish 
Cube("datav:/com/datav-engine-progress-bar/0.0.10/src/text/drawIndex",[],function(a){const b={font:{size:{},color:{},weight:100}};return a.exports=function(a,c,d,e){d=e(b,d);let f=document.createElement("canvas"),g=f.getContext("2d"),h=d.font.size,i=`${d.font.weight.key} ${h.key}px MicrosoftYaHei`,j=`${d.font.weight.value} ${h.value}px MicrosoftYaHei`;g.font=i;let k=g.measureText(a).width;g.font=j;let l=d.padding,m=g.measureText(c).width,n=Math.max(k,m)+l.horizontal.left+l.horizontal.right,o=h.key+h.value+l.vertical.top+l.font+l.vertical.bottom;f.width=n,f.height=o;let p=l.vertical.top+0.5*h.key,q=l.horizontal.left;return g.textAlign="start",g.textBaseline="middle",g.font=i,g.fillStyle=d.font.color.key,g.fillText(a,q,p),p=l.vertical.top+h.key+l.font+0.5*h.value,g.font=j,g.fillStyle=d.font.color.value,g.fillText(c,q,p),f},a.exports});;
Cube("datav:/com/datav-engine-progress-bar/0.0.10/src/text/drawProgressBar",[],function(a){const b={font:{},bar:{}};return a.exports=function(a,c,d,e,f){e=f(b,e),c=Math.min(c,1);let g=document.createElement("canvas"),h=g.getContext("2d"),i=`${e.font.weight} ${e.font.size}px MicrosoftYaHei`;h.font=i;let j=e.font.size,k=e.padding,l=h.measureText(a).width,m=Math.max(8*j,d-l-2*k.horizontal.left-k.horizontal.right),n=j,o=k.horizontal.left+l+k.horizontal.left+m+k.horizontal.right,p=k.vertical.top+j+k.vertical.bottom;g.width=o,g.height=p;let q=k.vertical.top,r=2*k.horizontal.left+l;return h.fillStyle=e.bar.baseColor,h.fillRect(r,q,m,n),h.fillStyle=c>e.bar.threshold?e.bar.alertColor:e.bar.color,h.fillRect(r,q,m*c,n),r*=0.5,q=k.vertical.top+0.5*j,h.font=i,h.textAlign="center",h.textBaseline="middle",h.fillStyle=e.font.color,h.fillText(a,r,q),g},a.exports});;
Cube("datav:/com/datav-engine-progress-bar/0.0.10/src/text/drawProgressBarPanel",[],function(a,b,c){const d=c("datav:/com/datav-engine-progress-bar/0.0.10/src/text/drawProgressBar"),e=c("datav:/com/datav-engine-progress-bar/0.0.10/src/text/drawIndex"),f={background:{color:"#000"},indexBar:{},progressBar:{}};return a.exports=function(a,b,c){b=c(f,b);let g=0,h=0,i=0;width=0,height=0;let j=[],k=[];a.index.forEach((a)=>{let d=e(a.key,a.value,b.indexBar,c);i+=d.width,height=d.height,j.push(d)}),g=height,width=i,a.progress.forEach((a)=>{let e=d(a.key,a.value,i,b.progressBar,c);width=Math.max(e.width,width),height+=e.height,k.push(e)});let l=document.createElement("canvas");l.width=width,l.height=height;let m=l.getContext("2d");return m.fillStyle=b.background.color,m.fillRect(0,0,width,height),j.forEach((a)=>{m.drawImage(a,0,0,a.width,a.height,h,0,a.width,a.height),h+=a.width}),k.forEach((a)=>{m.drawImage(a,0,0,a.width,a.height,0,g,a.width,a.height),g+=a.height}),l.toDataURL(),l},a.exports});;
Cube("datav:/com/datav-engine-progress-bar/0.0.10/src/progressBar",["datav:/npm/eventemitter3/3.0.0"],function(a,b,c){const d=c("datav:/npm/eventemitter3/3.0.0"),e=c("datav:/com/datav-engine-progress-bar/0.0.10/src/text/drawProgressBarPanel");return a.exports=function(a,b){const c={size:1};return class extends d{constructor(a){super(),this.options=b.mergeOptions(c,a),this.init()}init(){this.sprites=[],this.group=new a.Group}setData(a){this.remove(),a.forEach((a)=>{this.createSprites(a)})}createSprites(c){let d=e(c,this.options,b.mergeOptions),f=d.width/d.height,g=new a.CanvasTexture(d);g.anisotropy=this.options.anisotropy,g.needsUpdate=!0;let h=new a.SpriteMaterial({map:g,depthTest:!1,transparent:!0}),i=new a.Sprite(h);i.userData={ratio:f,data:c};let j=b.narrowedMercator([c.pos.x,c.pos.y,c.pos.z]);i.scale.set(this.options.size*f,this.options.size,1),i.position.set(j[0],c.pos.z,j[2]),this.group.add(i),this.sprites.push(i)}updateOptions(c){this.options=b.mergeOptions(this.options,c||{}),this.sprites.forEach((c)=>{let d=c.userData,f=e(d.data,this.options,b.mergeOptions),g=new a.CanvasTexture(f);g.anisotropy=this.options.anisotropy,c.material.map.image=f,c.material.map.needsUpdate=!0,c.scale.set(this.options.size*d.ratio,this.options.size,1)})}remove(){this.sprites.forEach((a)=>{this.group.remove(a),a.material.map&&a.material.map.dispose(),a.material.map.image=null,a.material.dispose()}),this.sprites=[]}}},a.exports});;
Cube("datav:/com/datav-engine-progress-bar/0.0.10/layer",["datav:/npm/eventemitter3/3.0.0"],function(a,b,c){const d=c("datav:/npm/eventemitter3/3.0.0");return a.exports=class extends d{constructor(){super(),this.preSceneName="main",this.usingSceneName="main"}addTo(a){return a?void(this.viewer=a,this.Utils=a.Utils,this.controller=a.controller,this.scene=this.getAssignedScene(),this.viewer.on("projChanged",this.updatePostions.bind(this))):console.log("Layer needs viewer layer")}getProjPos(a,b,c){return this.viewer&&this.viewer.Projection([a,b,c])}updatePostions(){}getAssignedScene(){const a=this.options;return a.isSceneGroup&&a.sceneName?a.sceneName?this.controller.getScene(a.sceneName)?this.controller.getScene(a.sceneName):this.controller.createScene(a.sceneName):void 0:this.controller.getScene("main")}toggleScene(a,b,c){this.controller.switchScene(a,b,c).then(()=>{this.preSceneName=b,this.usingSceneName=c})}updateOptions(){}},a.exports});;
Cube("datav:/com/datav-engine-progress-bar/0.0.10",[],function(a,b,c){const d=c("datav:/com/datav-engine-progress-bar/0.0.10/layer");let e=null;return a.exports=class extends d{constructor(a,b){super(),this.options=Object.assign({isSceneGroup:!1,sceneName:""},b||{})}addTo(a){super.addTo(a),e=a.three,this.init()}init(){let a=c("datav:/com/datav-engine-progress-bar/0.0.10/src/progressBar")(e,this.Utils);this.options.anisotropy=this.viewer.renderer.getMaxAnisotropy(),this.layer=new a({background:this.options.background,indexBar:this.options.indexBar,progressBar:this.options.progressBar,size:this.options.size}),this.options.visible?this.show():this.hide(),this.scene.add(this.layer.group)}show(){this.options.visible=!0,this.layer&&(this.layer.group.visible=!0)}hide(){this.options.visible=!1,this.layer&&(this.layer.group.visible=!1)}setData(a){a&&Array.isArray(a)&&this.layer&&this.layer.setData(a)}updateOptions(a){const b=this.Utils.deepClone(this.options);this.options=this.Utils.mergeOptions(this.options,a||{}),this.options.visible?this.show():this.hide(),this.layer&&(this.layer.updateOptions({background:this.options.background,indexBar:this.options.indexBar,progressBar:this.options.progressBar,size:this.options.size}),!this.Utils.easyDiff(b.sceneName,a.sceneName)&&(this.scene=this.getAssignedScene(),this.toggleScene(this.layer.group,this.usingSceneName,a.sceneName)))}remove(){this.layer&&(this.scene.remove(this.layer.group),this.layer.remove(),this.layer=null)}},a.exports});