// env=undefined => env=publish 
Cube("datav:/com/datav-expo-grid/0.0.8/extrude.js",["datav:/npm/earcut/2.1.3"],function(a,b,c){const d=c("datav:/npm/earcut/2.1.3");return a.exports=function(a,b){b=Object.assign({height:1,base:0,project:(a)=>[a[0]||0,a[1]||0,a[2]||0],closed:!1},b);let c=d.flatten([a]),e=c.vertices,f=e.length/c.dimensions,g=[],h=[];for(let d=0;d<f;d++)g.push(e[d*c.dimensions+0]),h.push(e[d*c.dimensions+1]);let j=[Math.min.apply(null,g),Math.min.apply(null,h),Math.max.apply(null,g),Math.max.apply(null,h)],k=[],l=[],m=[],n=[],o=[],q=d(c.vertices,c.holes,c.dimensions),r=e.length/c.dimensions;if(b.height===b.base){let a=j[2]-j[0],d=j[3]-j[1];e.forEach((f,g)=>{if(0===g%c.dimensions){let c=b.project([e[g],e[g+1],b.height]);m.push((e[g]-j[0])/a,(e[g+1]-j[1])/d),k.push(c[0],c[1],c[2]),n.push(c[2]),o.push(b.color[0],b.color[1],b.color[2],b.color[3])}}),l=q}else{let a=[],d=[],f=[],g=[];e.forEach((h,j)=>{if(0===j%c.dimensions){let c=b.project([e[j],e[j+1],b.height]);k.push(c[0],c[1],c[2]),o.push(b.color[0],b.color[1],b.color[2],b.color[3]),m.push(0===j%2?0:1,1),n.push(b.height-b.base),a.push(c[0],c[1],b.base),g.push(b.color[0],b.color[1],b.color[2],b.color[3]),d.push(0===j%2?0:1,0),f.push(0)}}),[].push.apply(k,a),[].push.apply(o,g),[].push.apply(m,d),[].push.apply(n,f);for(let a=0;a<r;a++)a===r-1?l.push(a+r,r,a,0,a,r):l.push(a+r,a+r+1,a,a+1,a,a+r+1);[].push.apply(l,q),b.closed&&q.forEach((a,b)=>{0===b%3&&l.push(q[b+0]+r,q[b+1]+r,q[b+2]+r)})}return{positions:k,indices:l,uvs:m,heights:n,colors:o}},a.exports});;
Cube("datav:/com/datav-expo-grid/0.0.8/extrude_polygon",[],function(a,b,c){const d=c("datav:/com/datav-expo-grid/0.0.8/extrude.js");return a.exports=function(a,b){let c={closed:!1,project:(a)=>[a[0]||0,a[1]||0,a[2]||0],getHeight:function(a){return a.height||0},getBase:function(){return 0},getKey:function(a){return a.id||""},getVertexColor:function(a){return a.color||[1,0,0,1]}};Object.assign(c,b);let e=[],f=[],g=[],h=[],i=[],j={};for(let k=0,l=a.length;k<l;k++){let b=a[k],l=c.getHeight(b),m=c.getBase(),n=c.project;coordinates=b.geometry;let o=e.length/3,p=e.length/3,q=d(coordinates,{height:l,base:m,project:n,color:c.getVertexColor(b)});[].push.apply(e,q.positions),[].push.apply(h,q.uvs),[].push.apply(i,q.heights),[].push.apply(g,q.colors);let r=q.indices,s=r.map(function(a){return a+p});[].push.apply(f,s);let t=e.length/3,u=c.getKey(b);u&&(j[u]=[o,t,k])}let k={positions:new Float32Array(e),indices:new Int32Array(f),uvs:new Float32Array(h),heights:new Float32Array(i),keyIndex:j,colors:new Float32Array(g)};return k},a.exports});;
Cube("datav:/com/datav-expo-grid/0.0.8/grid.js",["datav:/npm/chroma-js/1.3.4","datav:/npm/eventemitter3/2.0.3","datav:/npm/geoclassify/0.0.3"],function(a,b,c){let d=null;const e=c("datav:/npm/chroma-js/1.3.4"),f=c("datav:/npm/eventemitter3/2.0.3"),g=c("datav:/npm/geoclassify/0.0.3");return a.exports=class extends f{constructor(a,b){super(),this.map=a,d=a.three,this.options=b,this.maxCount=-Infinity,this.minCount=+Infinity,this.classify=new g({type:"Jenks",level:8}),this.girdMesh=null,this.gridCollection={},this.setClassifyPattern()}setData(a){this._data=a,this.dispose(),this.createFullGrid(),this.processing(),this.draw();const b=this.options;this.setRotation(b.rotationX,b.rotationY,b.rotationZ),this.set2Center(),this.autoSetCoords()}autoSetCoords(){const a=this.options;this.setRotation(a.rotationX,a.rotationY,a.rotationZ),this.setPosition(a.offsetX,a.offsetY,a.offsetZ)}createFullGrid(){}draw(){}processing(){}createGridGeometry(){}updateOptions(){}set2Center(){if(this.girdMesh&&this.girdMesh.geometry){let a=new d.Box3;a.setFromBufferAttribute(this.girdMesh.geometry.attributes.position);let b=a.getCenter();this.girdMesh.geometry.translate(-b.x,-b.y,-b.z)}}setPosition(a,b,c){this.girdMesh&&this.girdMesh.position.set(a,b,c)}setRotation(a,b,c){this.girdMesh&&this.girdMesh.rotation.set(a*Math.PI,b*Math.PI,c*Math.PI)}initMaterial(){return new d.ShaderMaterial({uniforms:{u_max_opacity:{value:this.options.maxOpacity}},vertexShader:`
      #ifdef GL_ES
        precision highp float;
      #endif
      attribute vec4 a_color;
      varying vec4 v_color;
      varying vec2 vUv;

      void main() {
        vUv = uv;
        v_color = a_color;
        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
      }
      `,fragmentShader:`
        uniform float u_max_opacity;
        varying vec4 v_color;
        varying vec2 vUv;
        void main() {
          float opacity = v_color.a;
          if(vUv.y > 0.98) {
            gl_FragColor = vec4(v_color.rgb, opacity * u_max_opacity);
          } else {
            gl_FragColor = vec4(v_color.rgb, 0.15 * u_max_opacity);
          }
        }
      `,side:d.DoubleSide,blending:d.NormalBlending,depthTest:!0,depthWrite:!0,transparent:!0})}getGridById(){}getColorArray(){let a=this.options,b=e.scale([a.fromColor,a.toColor]);return[0,1,2,3,4,5,6,7].map((a)=>b(0.142857142*a))}setClassifyData(a){this.classify&&this.classify.setData(a)}setClassifyPattern(){let a=this.getColorArray();this.classify&&this.classify.setPattern(a)}show(){this.girdMesh&&(this.girdMesh.visible=!0)}hide(){this.girdMesh&&(this.girdMesh.visible=!1)}getClassPattern(a){return this.classify.getPattern(a)}updateMaterials(){this.setClassifyPattern(),this.girdMesh&&this.girdMesh.material&&(this.girdMesh.material.uniforms.u_max_opacity.value=this.options.maxOpacity)}gridGroupScale(){}gridScaleById(){}dispose(){this.girdMesh&&(this.map.scene.remove(this.girdMesh),this.girdMesh.material&&this.girdMesh.material.dispose&&this.girdMesh.material.dispose(),this.girdMesh.geometry&&this.girdMesh.geometry.dispose&&this.girdMesh.geometry.dispose(),this.girdMesh.dispose&&this.girdMesh.dispose()),this.girdMesh=null,this.gridCollection={},this.maxCount=-Infinity,this.minCount=+Infinity}remove(){this.dispose(),this._data=null,this.girdMesh=null}},a.exports});;
Cube("datav:/com/datav-expo-grid/0.0.8/rect",["datav:/npm/chroma-js/1.3.4","datav:/npm/safely-merge/1.0.1"],function(a,b,c){let d=null;const e=c("datav:/com/datav-expo-grid/0.0.8/grid.js"),f=c("datav:/npm/chroma-js/1.3.4"),g=c("datav:/npm/safely-merge/1.0.1"),h=c("datav:/com/datav-expo-grid/0.0.8/extrude_polygon"),i={width:400,height:400,rectSizeX:20,rectSizeY:20,fromColor:"#E7CF42",toColor:"#F7173A",maxHeight:40,minHeight:20,getX:function(a){return void 0===a.x?a[0]:a.x},getY:function(a){return void 0===a.y?a[1]:a.y},getHeight:function(a,b,c){if(b===c)return(this.options.maxHeight+this.options.minHeight)/2;return(a-c)/(b-c)*(this.options.maxHeight-this.options.minHeight)+this.options.minHeight}},j=(a,b)=>a.width===b.width&&a.height===b.height&&a.rectSizeX===b.rectSizeX&&a.rectSizeY===b.rectSizeY&&a.maxHeight===b.maxHeight&&a.minHeight===b.minHeight&&a.toColor===b.toColor&&a.fromColor===b.fromColor&&a.defaultColor===b.defaultColor&&a.defaultHeight===b.defaultHeight&&a.padding===b.padding;return a.exports=class extends e{constructor(a,b){super(a,b),d=a.three,this.options=g(i,this.options||{})}createFullGrid(){const a=this.options,b=a.rectSizeX,c=a.rectSizeY,d=Math.floor(a.width/b),e=Math.floor(a.height/c);for(let a=-1;a<=d;a++)for(let d=-1;d<=e;d++){const e=a+":"+d,f={x:a,y:d};this.gridCollection[e]||(this.gridCollection[e]={id:e,count:"baselevel",centerPos:f,geometry:this.createGridGeometry(b,c,f)})}}processing(){let a=this.options,b=this._data,c=a.getX,e=a.getY,f=a.rectSizeX/a.width,g=a.rectSizeY/a.height;b.forEach((a)=>{let b=c(a),d=e(a),h=Math.floor(b/f),i=Math.floor(d/g);const j=this.gridCollection[h+":"+i];j.count="baselevel"===j.count?1:j.count+1,j.count>this.maxCount&&(this.maxCount=j.count),j.count<=this.minCount&&(this.minCount=j.count)});let d=[];for(let a in this.gridCollection){let b=this.gridCollection[a];"baselevel"!==b.count&&d.push(b.count)}this.setClassifyData(d)}createGridGeometry(a,b,c){const d=this.options,e=d.padding,f=d.rectSizeX,g=d.rectSizeY,h=a/2,i=b/2,j=c.x*f,k=c.y*g,l=[];return l.push([j+h-e,k+i-e]),l.push([j-h+e,k+i-e]),l.push([j-h+e,k-i+e]),l.push([j+h-e,k-i+e]),l}draw(){let a=this.options,b=this.gridCollection,e=a.getHeight.bind(this),c=[];for(let d in b){const g=b[d],h=g.count;let i,j;if("baselevel"===h)j=f(a.defaultColor).gl(),i=a.defaultHeight;else{const a=this.getClassPattern(h);j=f(a).gl(),i=e(h,this.maxCount,this.minCount)}g.height=i,g.color=j,c.push(g)}let g=h(c,{}),i=this.geometryArea=new d.BufferGeometry;i.setIndex(new d.BufferAttribute(new Uint32Array(g.indices),1)),i.addAttribute("position",new d.BufferAttribute(new Float32Array(g.positions),3).setDynamic(!0)),i.addAttribute("uv",new d.BufferAttribute(new Float32Array(g.uvs),2).setDynamic(!0)),i.addAttribute("a_color",new d.BufferAttribute(new Float32Array(g.colors),4).setDynamic(!0)),i.computeBoundingSphere(),i.computeVertexNormals(),i.normalizeNormals(),i.computeBoundingBox(),this.girdMesh=new d.Mesh(i,this.initMaterial()),this.girdMesh.renderOrder=500,this.map.scene.add(this.girdMesh)}updateOptions(a){const b=Object.assign({},this.options);this.options=g(this.options,a||{}),j(b,this.options)||(this.dispose(),this.setData(this._data)),this.updateMaterials(),this.autoSetCoords()}},a.exports});;
Cube("datav:/com/datav-expo-grid/0.0.8/hex",["datav:/npm/chroma-js/1.3.4","datav:/npm/safely-merge/1.0.1"],function(a,b,c){let d=null;const e=c("datav:/com/datav-expo-grid/0.0.8/grid.js"),f=c("datav:/npm/chroma-js/1.3.4"),g=c("datav:/npm/safely-merge/1.0.1"),h=c("datav:/com/datav-expo-grid/0.0.8/extrude_polygon"),i={width:400,height:400,hexSize:20,fromColor:"#E7CF42",toColor:"#F7173A",maxHeight:40,minHeight:20,getX:function(a){return void 0===a.x?a[0]:a.x},getY:function(a){return void 0===a.y?a[1]:a.y},getHeight:function(a,b,c){if(b===c)return(this.options.maxHeight+this.options.minHeight)/2;return(a-c)/(b-c)*(this.options.maxHeight-this.options.minHeight)+this.options.minHeight}},j=(a,b)=>a.width===b.width&&a.height===b.height&&a.hexSize===b.hexSize&&a.maxHeight===b.maxHeight&&a.minHeight===b.minHeight&&a.toColor===b.toColor&&a.fromColor===b.fromColor&&a.defaultColor===b.defaultColor&&a.defaultHeight===b.defaultHeight&&a.padding===b.padding;return a.exports=class extends e{constructor(a,b){super(a,b),d=a.three,this.options=g(i,this.options||{})}createFullGrid(){const a=this.options,b=a.hexSize,c=2*b*Math.sin(Math.PI/3),d=Math.floor(a.width/(1.5*b)),e=Math.floor(a.height/c);for(let a=-1;a<=d;a++)for(let c=-1;c<=e;c++){const d=a+":"+c,e={x:a,y:c};this.gridCollection[d]||(this.gridCollection[d]={id:d,count:"baselevel",centerPos:e,geometry:this.createGridGeometry(b,e)})}}processing(){let a=this.options,b=this._data,c=a.getX,e=a.getY,f=a.hexSize,g=1.5*f,h=2*f*Math.sin(Math.PI/3);b.forEach((b)=>{let d=c(b),i=e(b),j=d*a.width,k=i*a.height,l=Math.floor(j/g),m=k-0.5*(l%2)*h,n=Math.floor(m/h),o=j-l*g,p=m-n*h;o<=f*Math.abs(0.5-p/h)&&(l-=1);let q=p>0.5*h?1:0;o<=f*Math.abs(0.5-p/h)&&(n=n-l%2+q);const r=l+":"+n,s=this.gridCollection[r];s.count="baselevel"===s.count?1:s.count+1,s.count>this.maxCount&&(this.maxCount=s.count),s.count<=this.minCount&&(this.minCount=s.count)});let d=[];for(let a in this.gridCollection){let b=this.gridCollection[a];"baselevel"!==b.count&&d.push(b.count)}this.setClassifyData(d)}createGridGeometry(a,b){const c=1.5*a,d=2*a*Math.sin(Math.PI/3),e=b.x,f=b.y,g=this.options.padding,h=[];return h.push([e*c+0.5*a+g,f*d+0.5*(e%2*d)+g]),h.push([e*c+1.5*a-g,f*d+0.5*(e%2*d)+g]),h.push([e*c+2*a-g,f*d+0.5*d+0.5*(e%2*d)]),h.push([e*c+1.5*a-g,f*d+d+0.5*(e%2*d)-g]),h.push([e*c+0.5*a+g,f*d+d+0.5*(e%2*d)-g]),h.push([e*c+g,f*d+0.5*d+0.5*(e%2*d)]),h}draw(){let a=this.options,b=a.hexSize,c=this.gridCollection,e=a.getHeight.bind(this),g=[];for(let b in c){const d=c[b],h=d.count;let i,j;if("baselevel"===h)j=f(a.defaultColor).gl(),i=a.defaultHeight;else{const a=this.getClassPattern(h);j=f(a).gl(),i=e(h,this.maxCount,this.minCount)}d.height=i,d.color=j,g.push(d)}let i=h(g,{}),j=this.geometryArea=new d.BufferGeometry;j.setIndex(new d.BufferAttribute(new Uint32Array(i.indices),1)),j.addAttribute("position",new d.BufferAttribute(new Float32Array(i.positions),3).setDynamic(!0)),j.addAttribute("uv",new d.BufferAttribute(new Float32Array(i.uvs),2).setDynamic(!0)),j.addAttribute("a_color",new d.BufferAttribute(new Float32Array(i.colors),4).setDynamic(!0)),j.computeBoundingSphere(),j.computeVertexNormals(),j.normalizeNormals(),j.computeBoundingBox(),this.girdMesh=new d.Mesh(j,this.initMaterial()),this.girdMesh.renderOrder=500,this.map.scene.add(this.girdMesh)}updateOptions(a){const b=Object.assign({},this.options);this.options=g(this.options,a||{}),j(b,this.options)||(this.dispose(),this.setData(this._data)),this.updateMaterials(),this.autoSetCoords()}},a.exports});;
Cube("datav:/com/datav-expo-grid/0.0.8",["datav:/npm/eventemitter3/2.0.3","datav:/npm/safely-merge/1.0.1"],function(a,b,c){let d=null;const e=c("datav:/com/datav-expo-grid/0.0.8/hex"),f=c("datav:/com/datav-expo-grid/0.0.8/rect"),g=c("datav:/npm/eventemitter3/2.0.3"),h=c("datav:/npm/safely-merge/1.0.1"),i={gridType:"hex",width:400,height:400,fromColor:"#E7CF42",toColor:"#F7173A",padding:5,defaultHeight:15,defaultColor:"RGBA(102, 56, 240, 1.00)",hexSize:20,rectSizeX:20,rectSizeY:20,maxHeight:40,minHeight:20,maxOpacity:1,offsetX:0,offsetY:0,offsetZ:0,rotationX:-0.5,rotationY:0,rotationZ:-0.5};return a.exports=class extends g{constructor(a,b){super(),this.options=h(i,b||{})}addTo(a){return a?void(this.map=a,d=a.three,this.scene=a.scene,this.createGrid()):console.log("grid layer needs map layer")}setData(a){return a&&Array.isArray(a)?Array.isArray(a)&&!a.length?(this.disposeGrid(),console.log("Grid layer no data, and cleaned")):void(this._data=a,this.grids&&this.grids.setData(a)):console.log("Grid layer no data")}createGrid(){let a=this.options;switch(this.disposeGrid(),a.gridType){case"hex":this.grids=new e(this.map,a);break;case"rect":this.grids=new f(this.map,a);break;default:this.grids=new e(this.map,a);}}updateOptions(a){let b=this.options.gridType;this.options=h(this.options,a||{}),b!==this.options.gridType&&(this.createGrid(),this.grids&&this.grids.setData(this._data)),this.grids&&this.grids.updateOptions(a)}show(){this.grids.show()}hide(){this.grids.hide()}disposeGrid(){this.grids&&this.grids.dispose()}remove(){this.grids&&this.grids.remove()}},a.exports});