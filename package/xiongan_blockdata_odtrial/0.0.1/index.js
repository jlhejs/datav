// env=undefined => env=publish 
Cube("datav:/com/xiongan_blockdata_odtrial/0.0.1/src/odflowline",["datav:/npm/eventemitter3/3.0.0","datav:/npm/safely-merge/1.0.1"],function(a,b,c){const d=c("datav:/npm/eventemitter3/3.0.0"),e=c("datav:/npm/safely-merge/1.0.1");return a.exports=function(a,b,c){function f(b,c,d){let e=new a.BufferGeometry;e.addAttribute("position",new a.Float32BufferAttribute(b,3)),e.addAttribute("radio",new a.Float32BufferAttribute(c,1));let f=new a.ShaderMaterial({uniforms:{uStartColor:{value:new a.Color(d.color.start)},uEndColor:{value:new a.Color(d.color.end)},uOpacity:{value:d.opacity},uTrailLength:{value:d.trailLength},uTimeCounter:{value:0},size:{value:d.lineWidth}},transparent:!0,depthTest:!1,depthWrite:!0,vertexShader:g.vertexShader,fragmentShader:g.fragmentShader}),h=new a.Points(e,f);return h}const g=c.getShader("flowlineShader"),h={};return class extends d{constructor(b){super(),this.options=e(h,b),this.group=new a.Group}setData(c){let d=this.options,e=this.options.intervalDistance,f=[],g=[];c.forEach((c)=>{let d=c.src,h=c.dst,j=b.distance(d,h,!0)/e;for(let b=0;b<j;b++){let c=b/(j-1),e=a.Math.lerp(d[0],h[0],c),i=a.Math.lerp(d[1],h[1],c),k=a.Math.lerp(d[2],h[2],c);g.push(c),f.push(e,i,k)}}),this.render(f,g)}animate(){if(this.flowLine){let a=this.flowLine.material.uniforms.uTimeCounter;a.value+=this.options.speed,1<a.value&&(a.value%=1),this.flowLine.material.needsUpdate=!0}}render(a,b){this.flowLine&&this.remove(),this.flowLine=f(a,b,this.options),this.group.add(this.flowLine)}updateOptions(b){if(this.options=e(h,b),!!this.flowLine){let b=this.flowLine.material.uniforms;b.uStartColor.value=new a.Color(this.options.color.start),b.uEndColor.value=new a.Color(this.options.color.end),b.uOpacity.value=this.options.opacity,b.uTrailLength.value=this.options.trailLength,b.size.value=this.options.lineWidth,this.flowLine.material.needsUpdate=!0}}remove(){this.flowLine&&(this.group.remove(this.flowLine),this.flowLine.geometry.dispose(),this.flowLine.material.dispose(),this.flowLine=null)}}},a.exports});;
Cube("datav:/com/xiongan_blockdata_odtrial/0.0.1",["datav:/npm/eventemitter3/3.0.0","datav:/npm/safely-merge/1.0.1"],function(a,b,c){const d=c("datav:/npm/eventemitter3/3.0.0"),e=c("datav:/npm/safely-merge/1.0.1"),f=c("datav:/com/xiongan_blockdata_odtrial/0.0.1/src/odflowline"),g={intervalDistance:0.2};return a.exports=class extends d{constructor(a,b){super(),this.options=e(g,b||{})}addToViewer(a){a||console.error("ODFlowLayer: viewer is undefined"),this.viewer=a,this.viewer.addListener("onframerender",this.animate.bind(this)),this.init()}init(){let a=this.options,b=f(this.viewer.three,this.viewer.utils,this.viewer.shaderLib);this.odflowLine=new b(this.options),this.viewer.scene.add(this.odflowLine.group)}setData(a){a&&Array.isArray(a)&&0!=a.length&&(!this.odflowLine||this.odflowLine.setData(a))}render(){}animate(){this.odflowLine&&this.odflowLine.animate()}updateOptions(a){this.options=e(this.options,a||{}),this.odflowLine&&this.odflowLine.updateOptions(this.options)}remove(){this.viewer.removeListener("onframerender",this.animate),this.odflowLine&&(this.odflowLine.remove(),this.odflowLine=null)}},a.exports});