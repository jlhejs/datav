// env=undefined => env=publish 
Cube("datav:/com/@datav-3d/datav-engine-geofence/1.0.1/shader/frag.glsl",[],function(a){return a.exports="#define GLSLIFY 1\nuniform vec4 u_top_color;\nuniform vec4 u_side_color;\nuniform vec4 u_clicked_color;\nuniform sampler2D u_side_tex;\n\n#include <common>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n\nvarying vec2 vUv;\nvarying float vFaceType;\n\nvoid main() {\n  #include <logdepthbuf_fragment>\n\n  if(abs(vFaceType - 2.0 ) < EPSILON){\n    #ifdef USE_TOP\n      gl_FragColor = u_top_color;\n    #endif\n\n  } else if(abs(vFaceType - 1.0 ) < EPSILON){\n    vec4 sideTex = texture2D(u_side_tex, vUv);\n    sideTex.rgb *= u_side_color.rgb;\n\n    float opacity = 1.0;\n\n    #ifdef USE_GRADIENT\n      opacity *= pow(1. - vUv.y, 1.5);\n    #endif\n\n    gl_FragColor = vec4(sideTex.rgb, opacity * u_side_color.a);\n\n  } else {\n    discard;\n  }\n\n  gl_FragColor *= u_clicked_color;\n\n  #include <fog_fragment>\n  #include <premultiplied_alpha_fragment>\n}",a.exports});;
Cube("datav:/com/@datav-3d/datav-engine-geofence/1.0.1/shader/vert.glsl",[],function(a){return a.exports="#define GLSLIFY 1\nvarying vec2 vUv;\nattribute float faceType;\nvarying float vFaceType;\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n\nvoid main() {\n  vUv = uv;\n  vFaceType = faceType;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  #include <fog_vertex>\n  #include <logdepthbuf_vertex>\n}",a.exports});;
Cube("datav:/com/@datav-3d/datav-engine-geofence/1.0.1/geofence",[],function(a,b,d){function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function e(a,b){if(!a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return b&&("object"===typeof b||"function"===typeof b)?b:a}function f(a,b){if("function"!==typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function, not "+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}var g=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),h=function a(b,c,d){null===b&&(b=Function.prototype);var e=Object.getOwnPropertyDescriptor(b,c);if(void 0===e){var f=Object.getPrototypeOf(b);return null===f?void 0:a(f,c,d)}if("value"in e)return e.value;var g=e.get;return void 0===g?void 0:g.call(d)};return a.exports=function(a){var b=null,i=null;return function(a){function j(a){c(this,j);var b=e(this,(j.__proto__||Object.getPrototypeOf(j)).call(this));return b.classNameAlias="GeofenceLayer",b.options=Object.assign({isSceneGroup:!1,sceneNames:[{sceneName:"main"}],visible:!0,isTop:!0,isGradient:!0,geofenceHeight:1,offsetHeight:0,enableInteractive:!0,blendingType:"AdditiveBlending",topColor:"#3399ff",sideColor:"RGBA(0, 97, 105, 1.00)",sideTextureUrl:"",interactiveColor:"RGBA(79, 240, 252, 0.2)"},a||{}),b}return f(j,a),g(j,[{key:"addTo",value:function(a){h(j.prototype.__proto__||Object.getPrototypeOf(j.prototype),"addTo",this).call(this,a),b=a.THREE,i=a.Utils,this.meshMap=new Map,this.initInteractive(),this.initStaticTexture()}},{key:"initMaterial",value:function(){var a=this.options,e=a.topColor,f=a.sideTextureUrl,g=a.sideColor,h=a.isTop,j=a.isGradient,k=a.blendingType,l=i.Chroma(e).gl(),c=i.Chroma(g).gl(),m=b.UniformsUtils.merge([b.UniformsLib.fog,{u_top_color:{value:new b.Vector4(l[0],l[1],l[2],l[3])},u_side_color:{value:new b.Vector4(c[0],c[1],c[2],c[3])},u_clicked_color:{value:new b.Vector4(1,1,1,1)},u_side_tex:{value:null}}]);return m.u_side_tex.value=this.sideTexture,new b.ShaderMaterial({uniforms:m,vertexShader:d("datav:/com/@datav-3d/datav-engine-geofence/1.0.1/shader/vert.glsl"),fragmentShader:d("datav:/com/@datav-3d/datav-engine-geofence/1.0.1/shader/frag.glsl"),blending:b[k],side:b.DoubleSide,transparent:!0,depthWrite:!1,depthTest:!0,fog:!0,defines:{USE_TOP:h,USE_GRADIENT:j}})}},{key:"initStaticTexture",value:function(){var a=this.options.sideTextureUrl;this.sideTexture=new b.TextureLoader().setCrossOrigin("*").load(a)}},{key:"setData",value:function(a){var b=this;if(!a)return console.log("geofence layer no data");this.dispose(),this.data=a;var c=this.options,d=c.geofenceHeight,e=c.offsetHeight,f={standard:!0,isCenter:!0,withTop:!0,withBottom:!0,base:e,top:e+d,project:this.proj.proj};this.isGeoJson(a)?a.features.forEach(function(a){b.viewer.workerPool.runTask({command:"GEOJSON-EXTRUDE",data:{geojson:{type:"FeatureCollection",features:[a]},options:f}}).then(function(c){var d=b.createMesh(c);b.meshMap.set(d,a.properties)})}):Array.isArray(a)&&a.length&&a.forEach(function(a){b.viewer.workerPool.runTask({command:"GEOJSON-EXTRUDE",data:{geojson:{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:{type:"Polygon",coordinates:[a]}}]},options:f}}).then(function(a){var c=b.createMesh(a);b.meshMap.set(c,void 0)})})}},{key:"initInteractive",value:function(){var a=this;this.viewer.interactive.pick(this.group,function(b){if(a.options.enableInteractive){var d=b.length?b[0].object:null;if(a.clearClickedStyle(),d){var e=i.Chroma(a.options.interactiveColor).gl();d.material.uniforms.u_clicked_color.value.set(e[0],e[1],e[2],e[3]),a.emitCallBack(d)}}})}},{key:"emitCallBack",value:function(a){var b=this.options.callBackId,c=this.meshMap.get(a);if(c){var d=c[b];b&&this.emit("layer_global_var",{callBackId:b,callBackValue:d})}}},{key:"clearClickedStyle",value:function(){this.meshMap&&this.meshMap.forEach(function(a,b){b.material.uniforms.u_clicked_color.value.set(1,1,1,1)})}},{key:"createMesh",value:function(a){var c=this.genGeometry(a),d=new b.Mesh(c,this.initMaterial());return d.position.fromArray(a.center),d.renderOrder=5e3+Math.floor(200*Math.random()),this.addObject(d),this.checkVisible(),d}},{key:"genGeometry",value:function(a){var c=a.positions,d=a.uvs,e=a.normals,f=a.faceType,g=new b.BufferGeometry;return g.addAttribute("uv",new b.BufferAttribute(d,2)),g.addAttribute("normal",new b.BufferAttribute(e,3)),g.addAttribute("position",new b.BufferAttribute(c,3)),g.addAttribute("faceType",new b.BufferAttribute(new Float32Array(f),1)),g.computeBoundingSphere(),g.computeBoundingBox(),g}},{key:"isGeoJson",value:function(a){return a&&a.features&&Array.isArray(a.features)&&0<a.features.length}},{key:"checkVisible",value:function(){this.options.visible?this.show():this.hide()}},{key:"show",value:function(){this.options.visible=!0,h(j.prototype.__proto__||Object.getPrototypeOf(j.prototype),"show",this).call(this)}},{key:"hide",value:function(){this.options.visible=!1,h(j.prototype.__proto__||Object.getPrototypeOf(j.prototype),"hide",this).call(this)}},{key:"updateMaterial",value:function(){var a=this.options,b=a.topColor,c=a.sideColor;if(this.meshMap){var d=i.Chroma(b).gl(),e=i.Chroma(c).gl();this.meshMap.forEach(function(a,b){b.material.uniforms.u_top_color.value.set(d[0],d[1],d[2],d[3]),b.material.uniforms.u_side_color.value.set(e[0],e[1],e[2],e[3])})}}},{key:"updateMaterialDef",value:function(){var a=this.options,b=a.isTop,c=a.isGradient;this.meshMap&&this.meshMap.forEach(function(a,d){d.material.defines.USE_TOP=b,d.material.defines.USE_GRADIENT=c,d.material.needsUpdate=!0})}},{key:"updateMaterialBlending",value:function(){var a=this.options.blendingType;this.meshMap&&this.meshMap.forEach(function(c,d){d.material.blending=b[a]})}},{key:"updateMaterialSide",value:function(){var a=this,c=this.options.sideTextureUrl;this.sideTexture=new b.TextureLoader().setCrossOrigin("*").load(c),this.meshMap&&this.meshMap.forEach(function(b,c){c.material.uniforms.u_side_tex.value=a.sideTexture})}},{key:"updateInteractiveColor",value:function(){var a=this.options.interactiveColor;if(this.meshMap){var d=i.Chroma(a).gl();this.meshMap.forEach(function(a,c){var e=c.material.uniforms.u_clicked_color;e.value.equals(new b.Vector4(1,1,1,1))||e.value.set(d[0],d[1],d[2],d[3])})}}},{key:"updateOptions",value:function(a){var b=i.deepClone(this.options);this.options=i.mergeOptions(this.options,a||{}),i.easyDiff(b.topColor,a.topColor)&&i.easyDiff(b.sideColor,a.sideColor)||this.updateMaterial(),i.easyDiff(b.isTop,a.isTop)&&i.easyDiff(b.isGradient,a.isGradient)||this.updateMaterialDef(),i.easyDiff(b.blendingType,a.blendingType)||this.updateMaterialBlending(),i.easyDiff(b.sideTextureUrl,a.sideTextureUrl)||this.updateMaterialSide(),i.easyDiff(b.enableInteractive,a.enableInteractive)||a.enableInteractive||this.clearClickedStyle(),i.easyDiff(b.interactiveColor,a.interactiveColor)||this.updateInteractiveColor(),i.easyDiff(b.offsetHeight,a.offsetHeight)&&i.easyDiff(b.geofenceHeight,a.geofenceHeight)||this.setData(this.data),this.checkVisible()}},{key:"dispose",value:function(){this.clear(),this.meshMap&&(this.meshMap.forEach(function(a,b){b.material&&b.material.dispose&&b.material.dispose(),b.geometry&&b.geometry.dispose&&b.geometry.dispose(),b.dispose&&b.dispose()}),this.meshMap.clear())}},{key:"remove",value:function(){h(j.prototype.__proto__||Object.getPrototypeOf(j.prototype),"remove",this).call(this),this.data=null}}]),j}(a.Layer)},a.exports});;
Cube("datav:/com/@datav-3d/datav-engine-geofence/1.0.1",["datav:/npm/eventemitter3/3.0.0"],function(a,b,c){function d(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function e(a,b){if(!a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return b&&("object"===typeof b||"function"===typeof b)?b:a}function f(a,b){if("function"!==typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function, not "+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}var g=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),h=c("datav:/npm/eventemitter3/3.0.0"),i=c("datav:/com/@datav-3d/datav-engine-geofence/1.0.1/geofence"),j=function(a){function b(a,c){d(this,b);var f=e(this,(b.__proto__||Object.getPrototypeOf(b)).call(this));return f.options=c,f}return f(b,a),g(b,[{key:"addTo",value:function(a){this.viewer=a,this.initLayer()}},{key:"initLayer",value:function(){var a=i(this.viewer);this.layer=new a(this.options),this.layer.addTo(this.viewer)}},{key:"setData",value:function(a){this.layer&&this.layer.setData(a)}},{key:"updateOptions",value:function(a){this.layer&&this.layer.updateOptions&&this.layer.updateOptions(a)}},{key:"getThemableConfig",value:function(a){var b=a.area;return{color:b.geofenceColor}}},{key:"show",value:function(){this.layer&&this.layer.show&&this.layer.show()}},{key:"hide",value:function(){this.layer&&this.layer.hide&&this.layer.hide()}},{key:"remove",value:function(){this.layer&&this.layer.remove&&this.layer.remove()}}]),b}(h);return a.exports=j,a.exports});