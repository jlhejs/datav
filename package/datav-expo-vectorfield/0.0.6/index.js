// env=undefined => env=publish 
Cube("datav:/com/datav-expo-vectorfield/0.0.6/particle",[],function(a){const b={maxParticleAge:90};return a.exports=class{constructor(a){this.options=Object.assign(b,a||{}),this.clean()}setPos(a,b){this.x=a,this.y=b}setAge(){this.age=Math.floor(Math.random()*this.options.maxParticleAge)}setRange(a,b,c,d){this.xLeft=a,this.xRight=b,this.yTop=c,this.yBottom=d}clean(){this.x=null,this.y=null,this.xt=null,this.yt=null,this.age=null,this.xLeft=null,this.xRight=null,this.yTop=null,this.yBottom=null}remove(){this.clean()}},a.exports});;
Cube("datav:/com/datav-expo-vectorfield/0.0.6/vectorfield",["datav:/npm/chroma-js/1.3.4","datav:/npm/eventemitter3/3.0.0","datav:/npm/safely-merge/1.0.1"],function(a,b,c){const d=c("datav:/npm/chroma-js/1.3.4"),e=c("datav:/com/datav-expo-vectorfield/0.0.6/particle"),f=c("datav:/npm/eventemitter3/3.0.0"),g=c("datav:/npm/safely-merge/1.0.1"),h={width:360,height:181,pixelRatio:2,maxParticleAge:90,maxParticleNum:2,globalSpeed:0.1,lineWidth:0.5,fadeFillStyle:"rgba(0, 0, 0, 0.05)",nx:360,ny:180,colors:{slow:"#2468B4",medium:"#FCD97D",fast:"#B40023"}};return a.exports=class extends f{constructor(a){super(),this.options=g(h,a||{}),this.loopIndex=0,this.data=null,this.canvas=null,this.particles=[],this.drawingBuckets=[],this.vectorFieldsMatrix=[],this.cache=[]}bind(a,b){this.canvas=a,this.texture=b,this.ctx=a.getContext("2d")}setData(a){a&&(this.data=a),this.render()}render(){this.clean(),Array.isArray(this.data)&&this.data.length&&(this.createDefaultConfig(),this.creatVectorFieldMatrix(),this.classify(),this.createParticlesSet(),this.drawParticles())}createDefaultConfig(){let a=this.options;this.gridXRatio=a.width/a.nx,this.gridYRatio=a.height/a.ny}creatVectorFieldMatrix(){let a=this.options;for(let b,c=0,d=Math.floor(a.width);c<d;c+=2){b=[];for(let d,e=0,f=Math.floor(a.height);e<f;e+=2)d=this.interpolate(c,e),b[e+1]=b[e]=d;this.vectorFieldsMatrix[c+1]=this.vectorFieldsMatrix[c]=b}}interpolate(a,b){let c=this.options,d=Math.floor(c.nx),e=Math.floor(c.ny),f=a/this.gridXRatio,g=b/this.gridYRatio,h=Math.floor(f),i=h+1,j=Math.floor(g),k=j+1;if(h>d||j>e||0>h||0>j)return null;let l=this.data[h+j*d],m=this.data[i+j*d],n=this.data[h+k*d],o=this.data[i+k*d];return this.isValue(l)&&this.isValue(m)&&this.isValue(n)&&this.isValue(o)?this.bilinearInterpolateVector(f-h,g-j,l,m,n,o):null}bilinearInterpolateVector(e,f,g,h,i,j){let k=1-e,l=1-f,m=k*l,a=e*l,b=k*f,c=e*f,d=g.u*m+h.u*a+i.u*b+j.u*c,n=g.v*m+h.v*a+i.v*b+j.v*c,o=g.weight*m+h.weight*a+i.weight*b+j.weight*c;return{u:d,v:n,m:Math.sqrt(d*d+n*n),weight:o}}isValue(a){return null!==a&&void 0!==a}classify(){let a=this.options,b=a.colors,c=[b.slow,b.medium,b.fast],e=this.colorSeries=d.scale(c).colors(15).map((a)=>`rgb(${d(a).rgb().join()})`);this.processing()}processing(){let a=Infinity,b=-Infinity,c=Infinity,d=-Infinity,e=this.vectorFieldsMatrix;for(let f,g=0;g<e.length;g++){f=e[g];for(let e,g=0;g<f.length;g++)e=f[g],e&&e.m&&(e.m>b&&(b=e.m),e.m<a&&(a=e.m)),e&&e.weight&&(e.weight>d&&(d=e.weight),e.weight<c&&(c=e.weight))}this.minMode=a,this.maxMode=b,this.maxWeight=d,this.minWeight=c}getParticleColor(a){let b=this.colorSeries,c=this.minMode,d=this.maxMode;return d===c?b.length-1:Math.max(0,Math.min(b.length-1,Math.round((a-c)/(d-c)*(b.length-1))))}getParticleNumber(a){let b=this.maxWeight,c=this.minWeight,d=Math.floor(this.options.maxParticleNum);return b===c?d:Math.floor((a-c)*d/(b-c))}createParticlesSet(){let a=this.options,b=a.nx,c=a.ny;this.particles=[],this.drawingBuckets=this.colorSeries.map(()=>[]);Math.floor(a.maxParticleNum);for(let c=0,d=this.data.length;c<d;c++){let d=this.data[c],f=c%b*this.gridXRatio,g=Math.floor(c/b)*this.gridYRatio,h=Math.floor(f),i=h+this.gridXRatio,j=Math.floor(g),k=j+this.gridYRatio,l=this.getParticleNumber(d.weight);for(let b=0;b<l;b++){let b=new e({maxParticleAge:a.maxParticleAge}),c=Math.round(Math.random()*(i-h)+h),d=Math.round(Math.random()*(k-j)+j);b.setPos(c,d),b.setAge(),b.setRange(h,i,j,k),this.particles.push(b)}}}drawParticles(){this.ctx.lineWidth=this.options.lineWidth,this.ctx.fillStyle=this.options.fadeFillStyle,this.ctx.globalAlpha=0.9,this.loop()}evolve(){let a=this.options,b=a.globalSpeed,c=a.maxParticleAge;this.drawingBuckets.forEach((a)=>{a.length=0}),this.particles.forEach((a)=>{if(a.age>c){let b=Math.round(Math.random()*(a.xRight-a.xLeft)+a.xLeft),c=Math.round(Math.random()*(a.yBottom-a.yTop)+a.yTop);a.setPos(b,c),a.setAge()}let d=a.x,e=a.y,f=this.getVectorFields(d,e);if(null===f.m)a.age=c;else{let c=d+f.u*b,g=e+f.v*b;null===this.getVectorFields(c,g).m?(a.x=c,a.y=g):(a.xt=c,a.yt=g,this.drawingBuckets[this.getParticleColor(f.m)].push(a))}a.age+=1})}getVectorFields(a,b){let c=this.vectorFieldsMatrix[Math.round(a)];return c&&c[Math.round(b)]||{u:NaN,v:NaN,m:null,weight:NaN}}draw(){this.ctx.globalCompositeOperation="destination-in",this.ctx.fillRect(0,0,this.options.width,this.options.height),this.ctx.globalCompositeOperation="lighter",this.ctx.globalAlpha=0.9,this.ctx.fillStyle="rgba(0, 0, 0, 0.05)",this.drawingBuckets.forEach((a,b)=>{0<a.length&&(this.ctx.beginPath(),this.ctx.strokeStyle=this.colorSeries[b],a.forEach((a)=>{this.ctx.moveTo(a.x,a.y),this.ctx.lineTo(a.xt,a.yt),a.x=a.xt,a.y=a.yt}),this.ctx.stroke())})}loop(){this.loopIndex++,(this.loopIndex%=3)&&(this.evolve(),this.draw(),this.texture.needsUpdate=!0),this.loopId=window.requestAnimationFrame(this.loop.bind(this))}updateOptions(a){this.options=g(this.options,a||{}),this.render()}clean(){this.loopId&&window.cancelAnimationFrame(this.loopId),this.loopIndex=0,this.ctx&&this.ctx.clearRect(0,0,this.options.width,this.options.height),this.particles.forEach((a)=>a.remove()),this.particles.length=0,this.drawingBuckets.forEach((a)=>a.length=0),this.vectorFieldsMatrix.forEach((a)=>{a.forEach((a)=>a=null),a.length=0})}remove(){this.clean(),this.loopId&&window.cancelAnimationFrame(this.loopId),this.loopIndex=0,this.data=null,this.canvas=null,this.loopId=null}},a.exports});;
Cube("datav:/com/datav-expo-vectorfield/0.0.6",["datav:/npm/chroma-js/1.3.4","datav:/npm/eventemitter3/3.0.0","datav:/npm/safely-merge/1.0.1"],function(a,b,c){let d=null;const e=c("datav:/npm/chroma-js/1.3.4"),f=c("datav:/npm/eventemitter3/3.0.0"),g=c("datav:/npm/safely-merge/1.0.1"),h=c("datav:/com/datav-expo-vectorfield/0.0.6/vectorfield"),i={};return a.exports=class extends f{constructor(a,b){super(),this.options=g(i,b||{})}addTo(a){a||console.error("VectorField need map"),d=a.three,this.scene=a.scene,this.init()}init(){let a=this.options.global,b=a.width,c=a.height,e=this.canvas=document.createElement("canvas");e.width=b,e.height=c;let f=this.texture=new d.Texture(e);f.anisotropy=16,f.minFilter=d.LinearFilter;let g=this.vectorField=new h(this.getVfOpts());g.bind(e,f);let i=this.material=this.initMaterial(),j=this.geometry=new d.PlaneBufferGeometry(b,c,b,c),k=this.mesh=new d.Mesh(j,i);k.renderOrder=1e3,this.setRotation(),this.setPosition(),this.scene.add(k),this.texture.needsUpdate=!0}setRotation(){let a=this.options.global,b=a.rotationX*Math.PI,c=a.rotationY*Math.PI,d=a.rotationZ*Math.PI;this.mesh&&this.mesh.rotation.set(b,c,d)}setPosition(){let a=this.options.global,b=a.offsetX,c=a.offsetY,d=a.offsetZ;this.mesh&&this.mesh.position.set(b,c,d)}getVfOpts(){let a=this.options;return{nx:a.vectorfield.nx,ny:a.vectorfield.ny,width:a.global.width,height:a.global.height,colors:a.vectorfield.colors,lineWidth:a.vectorfield.lineWidth,globalSpeed:a.vectorfield.globalSpeed,maxParticleNum:a.vectorfield.maxParticleNum,maxParticleAge:a.vectorfield.maxParticleAge}}initMaterial(){let a=this.options.vectorfield,b=e(a.colors.slow).gl(),c=e(a.colors.fast).gl();return new d.ShaderMaterial({uniforms:{uScale:{value:a.zScale},uTexture:{value:this.texture},uSourceColor:{value:new d.Vector3(b[0],b[1],b[2])},uTargetColor:{value:new d.Vector3(c[0],c[1],c[2])}},vertexShader:`
        #ifdef GL_ES
          precision highp float;
        #endif

        varying vec2 vUv;
        uniform float uScale;
        uniform vec3 uSourceColor;
        uniform vec3 uTargetColor;
        uniform sampler2D uTexture;

        float getIndex(float a, float b, float x){
          if(a == b) return 0.0;
          return (x - a) / (b - a);
        }
  
        float getZ(vec4 color){
          float r_delta = getIndex(uSourceColor.r, uTargetColor.r, color.r);
          float g_delta = getIndex(uSourceColor.g, uTargetColor.g, color.g );
          float b_delta = getIndex(uSourceColor.b, uTargetColor.b, color.b );
  
          return ((r_delta + g_delta + b_delta) / 3.0) * uScale;
        }

        void main() {
          vUv = uv;
          vec4 color = texture2D(uTexture, uv);
          // float z = position.z + (color.r) * 5.0;
          float z = position.z + getZ(color);
          gl_Position = projectionMatrix * modelViewMatrix * vec4(position.xy, z, 1.0);
        }
      `,fragmentShader:`
        varying vec2 vUv;     
        uniform sampler2D uTexture;
        void main() {
          gl_FragColor = texture2D(uTexture, vUv);
        }
      `,side:d.DoubleSide,blending:d.NormalBlending,depthTest:!0,depthWrite:!0,transparent:!0})}setData(a){return a?void this.vectorField.setData(a):console.log("vectorfield layer has no data")}updateOptions(a){this.options=g(this.options,a||{}),this.updateCanvas(),this.updateTexture(),this.vectorField.updateOptions(this.getVfOpts()),this.texture.needsUpdate=!0}updateCanvas(){let a=this.options.global;this.canvas.width=a.width,this.canvas.height=a.height,this.setRotation(),this.setPosition()}updateTexture(){let a=this.options.vectorfield,b=e(a.colors.slow).gl(),c=e(a.colors.fast).gl();this.material.uniforms.uTexture.value=this.texture,this.material.uniforms.uScale.value=a.zScale,this.material.uniforms.uSourceColor.value=new d.Vector3(b[0],b[1],b[2]),this.material.uniforms.uTargetColor.value=new d.Vector3(c[0],c[1],c[2]),this.material.needsUpdate=!0,this.texture.needsUpdate=!0}remove(){this.scene.remove(this.mesh),this.vectorField.remove(),this.mesh&&this.mesh.dispose&&this.mesh.dispose(),this.material&&this.material.dispose&&this.material.dispose(),this.geometry&&this.geometry.dispose&&this.geometry.dispose(),this.mesh=null,this.material=null,this.geometry=null}},a.exports});