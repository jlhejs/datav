// env=undefined => env=publish 
Cube("datav:/com/map3d-earth-heatline/0.0.14/shader/point.vert.glsl",[],function(a){return a.exports="#define GLSLIFY 1\nattribute float a_size;\nattribute float a_index;\nattribute float a_length;\n\nattribute vec3 plane_position;\nattribute vec3 sphere_position;\n\nuniform float u_proj_type;\nuniform float u_ease_index;\n\nuniform float u_maxSize;\nuniform vec2 u_valueRange; \nuniform sampler2D u_colorTexture;\n\nvarying vec4 v_color;\nvarying float v_index;\nvarying float v_length;\n\nvec3 real_position() {\n  if(u_proj_type == 0.){\n    return mix(plane_position, sphere_position, u_ease_index);\n  } else if(u_proj_type == 1.){\n     return mix(sphere_position, plane_position, u_ease_index);\n  } else {\n    return vec3(0);\n  }\n}\n\nvoid main() {\n  v_index = a_index;\n  v_length = a_length;\n  \n  float i = 0.0;\n  float minValue = u_valueRange.x;\n  float maxValue = u_valueRange.y;\n\n  if(minValue == maxValue) {\n    i = 1.0;\n  } else {\n    i = (a_size - minValue) / (maxValue - minValue);\n  }\n\n  vec2 colorPos = vec2(fract(16.0 * i), floor(16.0 * i) / 16.0);\n  v_color = texture2D(u_colorTexture, colorPos);\n\n  gl_PointSize = u_maxSize * (i < .3 ? .3 : i);\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(real_position(), 1.);\n}",a.exports});;
Cube("datav:/com/map3d-earth-heatline/0.0.14/shader/point.frag.glsl",[],function(a){return a.exports="#define GLSLIFY 1\nvarying vec4 v_color;\nvarying float v_index;\nvarying float v_length;\n\nuniform float u_isdash;\nuniform float u_length;\nuniform float u_animFlag;\nuniform float u_timeCount;\nuniform float u_maxOpacity;\nuniform float u_dash_radio;\n\nfloat calOpacity(float u_time){\n  float opacity = .0;\n  \n  if(u_time < .5) {\n    opacity = u_time;\n  } else {\n    opacity = 1.0 - u_time;\n  }\n\n  return opacity;\n}\n\nvoid main() {\n  float opacity = 1.0;\n  float fractor = 1.0;\n  \n  if(u_animFlag != .0){\n   opacity = calOpacity(u_timeCount);\n  }\n\n  if(u_isdash == 1.) {\n   fractor = mod(floor(v_index / (u_length / v_length)), u_dash_radio) == .0 ? 1.0 : .0;\n  }\n\n  gl_FragColor = vec4(v_color.xyz,  fractor * opacity * u_maxOpacity);\n}",a.exports});;
Cube("datav:/com/map3d-earth-heatline/0.0.14/processor",["datav:/npm/cheap-ruler/2.5.1","datav:/npm/geoclassify/0.0.4"],function(a,b,c){function d(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}return Array.from(a)}function e(a){return a.properties?void 0!==a.properties.weight||void 0!==a.properties.value?a.properties.weight||a.properties.value:0:0}function f(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:200,d=(90-b)*(Math.PI/180),e=(0<=a?a:360+a)*(Math.PI/180),f=c*Math.sin(d)*Math.sin(e),g=c*Math.cos(d),h=c*Math.sin(d)*Math.cos(e);return{x:f,y:g,z:h}}function g(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:200,d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:2;return{x:a*d,y:b*d,z:c}}function h(a,b){if(!a.features||!Array.isArray(a.features)||!a.features.length)return console.log("footprint parse geojson failed");var c={size:[],spherePositions:[],planePositions:[],index:[],length:[]},d=1,h=new i({type:"Jenks",level:10});return h.setData(a.features.map(function(a){return+e(a)})),h.setPattern([1,2,3,4,5,6,7,8,9,10]),a.features.forEach(function(a){var k=a.geometry.coordinates;if(k.length)for(var l,m=j(k[0][1],"kilometers"),n=m.lineDistance(k),o=Math.ceil(n),q=Math.ceil(n/d),r=0;r<q;r++){l=m.along(k,r*d),c.index.push(r/q),c.length.push(o),c.size.push(h.getPattern(e(a)));var i=f(l[0],l[1],b),p=g(l[0],l[1],b);c.spherePositions.push(i.x,i.y,i.z),c.planePositions.push(p.x,p.y,p.z)}}),c}var j=c("datav:/npm/cheap-ruler/2.5.1"),i=c("datav:/npm/geoclassify/0.0.4");return a.exports={geojson:h},a.exports});;
Cube("datav:/com/map3d-earth-heatline/0.0.14",["datav:/npm/eventemitter3/2.0.3"],function(a,b,c){function d(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function e(a,b){if(!a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return b&&("object"===typeof b||"function"===typeof b)?b:a}function f(a,b){if("function"!==typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function, not "+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}var g=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),h=null,i=null,j=c("datav:/npm/eventemitter3/2.0.3"),k=c("datav:/com/map3d-earth-heatline/0.0.14/processor"),l=function(a){function b(a,c){d(this,b);var f=e(this,(b.__proto__||Object.getPrototypeOf(b)).call(this));return f.options=Object.assign({visible:!0,isdash:!0,dashRadio:5,height:2,maxSize:5.5,speed:4e-3,dashLength:100,maxOpacity:1,toColor:"#E83B46",fromColor:"#38F9F9"},c||{}),f.animation=f.animation.bind(f),f}return f(b,a),g(b,[{key:"addTo",value:function(a){return a?void(h=a.THREE,i=a.Utils,this.map=a,this.scene=a.scene,this.initMaterial(),this.map.on("animationFrame",this.animation),this.map.on("projChanged",this.updatePostions.bind(this))):console.log("Heatline layer needs map layer")}},{key:"animation",value:function(){this.options.speed&&this.material&&(1<=this.material.uniforms.u_timeCount.value&&(this.material.uniforms.u_timeCount.value=0),this.material.uniforms.u_timeCount.value+=this.options.speed)}},{key:"setData",value:function(a){if(this.cleanComByEmptyArray(a),a&&a.features&&Array.isArray(a.features)&&0<a.features.length){this.clean(),this.data=a;var b=this.options.height,c=k.geojson(a,200+b);this.geometry=this.initGeometry(c),this.heatline=new h.Points(this.geometry,this.material),this.heatline.renderOrder=100+Math.round(3e3*Math.random()),this.scene.add(this.heatline),this.checkVisible()}}},{key:"cleanComByEmptyArray",value:function(a){a&&Array.isArray(a)&&!a.length&&this.clean()}},{key:"initMaterial",value:function(){var a=this.options,b={u_timeCount:{value:0},u_maxSize:{value:a.maxSize},u_maxOpacity:{value:a.maxOpacity},u_colorTexture:{value:this.createColorTexture()},u_valueRange:{value:new h.Vector2(1,1)},u_animFlag:{value:a.speed},u_length:{value:a.dashLength},u_isdash:{value:this.isDash()},u_dash_radio:{value:a.dashRadio},u_ease_index:{value:1},u_proj_type:{value:this.map.projType}};this.material=new h.ShaderMaterial({uniforms:b,vertexShader:c("datav:/com/map3d-earth-heatline/0.0.14/shader/point.vert.glsl"),fragmentShader:c("datav:/com/map3d-earth-heatline/0.0.14/shader/point.frag.glsl"),blending:h.NormalBlending,depthTest:!0,depthWrite:!1,transparent:!0}),this.material.needsUpdate=!0,this.material.extensions.derivatives=!0}},{key:"isDash",value:function(){return this.options.isdash?1:0}},{key:"initGeometry",value:function(a){return this.geometry=new h.BufferGeometry,this.geometry.addAttribute("sphere_position",new h.BufferAttribute(new Float32Array(a.spherePositions),3).setDynamic(!0)),this.geometry.addAttribute("plane_position",new h.BufferAttribute(new Float32Array(a.planePositions),3).setDynamic(!0)),this.geometry.addAttribute("a_index",new h.BufferAttribute(new Float32Array(a.index),1)),this.geometry.addAttribute("a_length",new h.BufferAttribute(new Float32Array(a.length),1)),this.geometry.addAttribute("a_size",new h.BufferAttribute(new Float32Array(a.size),1)),this.geometry.setDrawRange(0,a.spherePositions.length/3),this.updateUniformsSize(a.size),this.geometry}},{key:"updateUniformsSize",value:function(a){if(!a)return console.log("footprint update uniforms failed");var b=+Infinity,c=-Infinity;a.forEach(function(a){a>c&&(c=a),a<b&&(b=a)}),this.material.uniforms.u_valueRange.value=new h.Vector2(b,c)}},{key:"createColorTexture",value:function(){var a=this.options,b=a.toColor,c=a.fromColor,d=i.Chroma.scale([c,b]).colors(6),e=document.createElement("canvas"),f=e.getContext("2d");e.width=256,e.height=1;var g=f.createLinearGradient(0,0,256,0);["0.0","0.2","0.4","0.6","0.8","1.0"].map(function(a,b){g.addColorStop(+a,d[b])}),f.fillStyle=g,f.fillRect(0,0,256,1);var j=new Uint8Array(f.getImageData(0,0,256,1).data),k=new h.DataTexture(j,16,16,h.RGBAFormat,h.UnsignedByteType);return k.needsUpdate=!0,k}},{key:"updateMaterial",value:function(){var a=this.options;this.material.uniforms.u_isdash.value=this.isDash(),this.material.uniforms.u_animFlag.value=a.speed,this.material.uniforms.u_maxSize.value=a.maxSize,this.material.uniforms.u_length.value=a.dashLength,this.material.uniforms.u_dash_radio.value=a.dashRadio,this.material.uniforms.u_maxOpacity.value=a.maxOpacity,this.material.uniforms.u_colorTexture.value=this.createColorTexture(),this.material.needsUpdate=!0}},{key:"updatePostions",value:function(a){var b=a.projType,c=a.index;this.material.uniforms.u_ease_index.value=c,this.material.uniforms.u_proj_type.value=b}},{key:"updateOptions",value:function(a){var b=i.deepClone(this.options);this.options=i.mergeOptions(this.options,a||{}),i.easyDiff(b.height,this.options.height)||this.setData(this.data),this.updateMaterial(),this.checkVisible()}},{key:"checkVisible",value:function(){var a=this.options;a.visible?this.show():this.hide()}},{key:"hide",value:function(){this.options.visible=!1,this.heatline&&(this.heatline.visible=!1)}},{key:"show",value:function(){this.options.visible=!0,this.heatline&&(this.heatline.visible=!0)}},{key:"clean",value:function(){this.heatline&&this.scene.remove(this.heatline),this.heatline&&this.heatline.dispose&&this.heatline.dispose(),this.material&&this.material.dispose&&this.material.dispose(),this.geometry&&this.geometry.dispose&&this.geometry.dispose(),this.heatline=null,this.geometry=null,this.data=null}},{key:"remove",value:function(){this.map.off("animationFrame",this.animation),this.map.off("projChanged",this.updatePostions),this.clean(),this.material&&this.material.dispose&&this.material.dispose(),this.material=null}}]),b}(j);return a.exports=l,a.exports});