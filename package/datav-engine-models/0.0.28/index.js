// env=undefined => env=publish 
Cube("datav:/com/datav-engine-models/0.0.28/shader/outline",[],function(a){const b=`
varying vec3 eyeNormal;
varying vec3 eyePos;

#include <logdepthbuf_pars_vertex>

void main() {
  vec4 pos = modelViewMatrix * vec4(position, 1.0);
  eyePos = pos.xyz / pos.w;
  eyeNormal = normalize( normalMatrix * normal );
  gl_Position = projectionMatrix * pos;

  #include <logdepthbuf_vertex>
}
`,c=`
uniform vec3 color;
uniform float opacity;
uniform float intensity;
varying vec3 eyeNormal;
varying vec3 eyePos;

#include <logdepthbuf_pars_fragment>

void main() {
    #include <logdepthbuf_fragment>

    vec3 N = normalize(eyeNormal);
    vec3 E = normalize(-eyePos);
    gl_FragColor = vec4(color, max(pow(1.0 - max(dot(E,N),0.0),intensity), opacity));
    #include <tonemapping_fragment>
    #include <premultiplied_alpha_fragment>
}
`;return a.exports={vertexShader:b,fragmentShader:c},a.exports});;
Cube("datav:/com/datav-engine-models/0.0.28/materials_manager",[],function(a){let b=null,e=null;return a.exports=class{constructor(a,c){this.viewer=a,this.options=c,b=a.three,e=a.Utils,this.whiteMaterial=new b.MeshStandardMaterial({transparent:!0,opacity:1}),this.sourceMaterials={},this.enableFloatTexture=!1,this.envMap=null,this.cubeEnvMap=null,this.sphereEnvMap=null}fetch(a,b){this.dispose(),e.fetchModel(a,(a)=>{this.model=a,a&&a.scene&&(this.initMaterial(),this.initWriteMaterial(),Promise.all([this.createCubeEnvMap(),this.createSphereEnvMap()]).then(()=>{this.cloneAllMaterial(),b&&b(a)}))})}initMaterial(){this.model.scene.traverse((a)=>{"Mesh"===a.type&&e.materialTraverse(a.material,(b,c)=>{const d=e.getCurrentMaterial(b,c),f=d.clone();f.alphaTest=0.01,f.sourceOpacity=f.opacity,Array.isArray(a.material)?a.material[c]=f:a.material=f,this.disposeMaterial(d)})})}initWriteMaterial(){}createCubeEnvMap(){const a=[this.options.style.hdr_px,this.options.style.hdr_nx,this.options.style.hdr_py,this.options.style.hdr_ny,this.options.style.hdr_pz,this.options.style.hdr_nz];return new Promise((c)=>{new b.HDRCubeTextureLoader().load(b.UnsignedByteType,a,(a)=>{const d=new b.PMREMGenerator(a);d.update(this.viewer.renderer);const e=new b.PMREMCubeUVPacker(d.cubeLods);e.update(this.viewer.renderer),this.cubeEnvMap=e.CubeUVRenderTarget.texture,a.dispose(),d.dispose(),e.dispose(),c()})})}createSphereEnvMap(){const a=this.options.style.sphereEnvMapUrl;return new Promise((c)=>{new b.RGBELoader().load(a,(a)=>{a.minFilter=b.NearestFilter,a.magFilter=b.NearestFilter,a.encoding=b.LinearEncoding;const d=new b.EquiangularToCubeGenerator(a,512),e=d.update(this.viewer.renderer),f=new b.PMREMGenerator(e);f.update(this.viewer.renderer);const g=new b.PMREMCubeUVPacker(f.cubeLods);g.update(this.viewer.renderer),this.sphereEnvMap=g.CubeUVRenderTarget.texture,c()})})}toggleEnvMap(){const{envMapType:a,isEnvMap:c,envMapIntensity:d}=this.options.style;"cube"===a?this.envMap=this.cubeEnvMap:"sphere"===a?this.envMap=this.sphereEnvMap:void 0,c?this.model.scene.traverse((a)=>{"Mesh"===a.type&&e.materialTraverse(a.material,(a,c)=>{const f=e.getCurrentMaterial(a,c);f instanceof b.MeshPhongMaterial||(f.envMap=this.envMap,f.envMapIntensity=d,f.needsUpdate=!0)})}):this.model.scene.traverse((a)=>{"Mesh"===a.type&&e.materialTraverse(a.material,(a,c)=>{const d=e.getCurrentMaterial(a,c);d instanceof b.MeshPhongMaterial||(d.envMap=null,d.envMapIntensity=0,d.needsUpdate=!0)})})}disposeMaterial(a){a&&a.dispose&&a.dispose()}cloneAllMaterial(){this.model.scene.traverse((a)=>{"Mesh"===a.type&&(this.sourceMaterials[a.uuid]=[],e.materialTraverse(a.material,(b,c)=>{const d=e.getCurrentMaterial(b,c);d.envMap=this.envMap,d.needsUpdate=!0,this.sourceMaterials[a.uuid].push(d)}))})}colorifyGlobal(a,b,c){this.model.scene.traverse((d)=>{"Mesh"===d.type&&e.materialTraverse(d.material,(f,g)=>{const h=e.getCurrentMaterial(f,g),i=a*h.sourceOpacity;1!==i&&(h.transparent=!0),h.opacity=i,h._opacity=h.opacity,h.depthWrite=b,h.wireframe=c;const j=this.sourceMaterials[d.uuid][null===g?0:g];e.syncMaterials(h,j)})})}colorifyByData(a){if(a&&this.model&&this.model.scene)for(let b=0;b<a.length;b++){let f=a[b],c=this.model.scene.getObjectByName(f.id);c&&c.traverse((a)=>{"Mesh"===a.type&&(a.visible=f.visible,e.materialTraverse(a.material,(b,d)=>{if("source"===f.type){const c=e.getCurrentMaterial(b,d),f=this.sourceMaterials[a.uuid][null===d?0:d];e.syncMaterials(f,c)}else if("bloom"===f.type){this.checkFloatTextureExist();let a=e.getCurrentMaterial(b,d);a=this.floatTextureMaterial.clone(),a.needsUpdate=!0}else{const a=e.Chroma(f.color).gl(),c=e.getCurrentMaterial(b,d);c.color.setRGB(a[0],a[1],a[2])}}))})}}createEaseFunc(a,b,c,d){new e.TWEEN.Tween({value:a}).to({value:b},c).delay(0).onStart(function(){}).easing(e.TWEEN.Easing.Linear.None).onUpdate(function(){d&&d(this.value)}).onComplete(function(){e.TWEEN.remove()}).start()}highlightById(a,b,c){const d=e.traverseInverseChildsByName(this.model.scene,a);this.createEaseFunc(1,b,c,(a)=>{d.forEach((c)=>{e.materialTraverse(c.material,(c,d)=>{const f=e.getCurrentMaterial(c,d),g=f.opacity;b!==g&&(f.opacity=f._opacity*a,f.transparent=1!==f.opacity)})})});const f=e.traverseAllChildsByName(this.model.scene,a);this.createEaseFunc(b,1,c,(a)=>{f.forEach((b)=>{e.materialTraverse(b.material,(b,c)=>{const d=e.getCurrentMaterial(b,c);d._opacity!==d.opacity&&(d.opacity=d._opacity*a,d.transparent=1!==d.opacity)})})})}easeOpacityByid(a,c,d){let f=[];if(Array.isArray(a))a.forEach((a)=>{const b=e.traverseAllChildsByName(this.model.scene,a);f=f.concat(b)});else{const b=e.traverseAllChildsByName(this.model.scene,a);f=f.concat(b)}f.forEach((a)=>{e.materialTraverse(a.material,(a,b)=>{const c=e.getCurrentMaterial(a,b);c.userData.tempOpcity=c.opacity})}),this.createEaseFunc(0,1,d,(a)=>{f.forEach((d)=>{e.materialTraverse(d.material,(d,f)=>{const g=e.getCurrentMaterial(d,f),h=b.Math.lerp(g.userData.tempOpcity,c,a);g.opacity=h,g.transparent=1!==g.opacity})})})}checkFloatTextureExist(){this.enableFloatTexture||(this.floatTextureMaterial=this.createSingleFloatTextureMaterial(),this.enableFloatTexture=!0)}createSingleFloatTextureMaterial(){const a=this.sceneRtt=new b.Scene,c=this.cameraRtt=new b.OrthographicCamera(-256,256,256,-256,-1e4,1e4);c.position.z=10;const d=this.rtTexture=new b.WebGLRenderTarget(512,512,{minFilter:b.LinearFilter,magFilter:b.LinearFilter,format:b.RGBAFormat,type:b.FloatType}),e=this.createFloatTextureMesh();a.add(e);const f=new b.MeshBasicMaterial({color:16777215,map:d.texture,side:b.DoubleSide});return f}doRender(a){this.enableFloatTexture&&this.rtTexture&&this.sceneRtt&&this.cameraRtt&&a&&a.render(this.sceneRtt,this.cameraRtt,this.rtTexture,!0)}createFloatTextureMesh(){const a=new b.PlaneBufferGeometry(512,512),c=new b.ShaderMaterial({uniforms:{uColor:{value:new b.Vector3(1.4,4.1,5.34)}},vertexShader:`
        void main() {
          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        }
      `,fragmentShader:`
        #ifdef GL_ES
          precision highp float;
        #endif
        
        uniform vec3 uColor;
        void main() {
          gl_FragColor = vec4(uColor, 1.0);
          gl_FragColor *= vec4(1.0, 1.5, 2.1, 1.0);
        }
      `,transparent:!0,opacity:1}),d=new b.Mesh(a,c);return d}setGlobalType(a){"source"===a?this.colorifySource():"white"===a?this.colorifyWhite():void 0}colorifySource(){this.model.scene.traverse((a)=>{"Mesh"===a.type&&e.materialTraverse(a.material,(b,c)=>{const d=this.sourceMaterials[a.uuid][null===c?0:c];Array.isArray(a.material)?(a.material[c]=d,a.material[c].needsUpdate=!0):(a.material=d,a.material.needsUpdate=!0)})})}colorifyWhite(){this.model.scene.traverse((a)=>{"Mesh"===a.type&&(a.material=this.whiteMaterial.clone(),a.material.alphaTest=0.01,a.material.sourceOpacity=1,a.material.needsUpdate=!0)})}updateOptions(a){this.options=e.mergeOptions(this.options,a||{})}dispose(){this.model&&e.disposeNode(this.model.scene),this.sceneRtt&&e.disposeNode(this.sceneRtt),this.floatTextureMaterial=null,this.sceneRtt=null,this.cameraRtt=null,this.rtTexture=null}},a.exports});;
Cube("datav:/com/datav-engine-models/0.0.28/actions_manager",["datav:/npm/eventemitter3/3.0.0"],function(a,b,c){let d=null,e=null;const f=c("datav:/npm/eventemitter3/3.0.0"),g=c("datav:/com/datav-engine-models/0.0.28/shader/outline");class h extends f{constructor(a,b,c){super(),d=a,e=b,this.playAnimation=!0,this.isMoving=!1,this.options=c,this.initInteractiveMaterial(),this.activeObjects=[]}getCenter(){return this.model?new d.Box3().setFromObject(this.model).getCenter():void 0}set isPlayAnimation(a){this.playAnimation=a,this.toggleAnimations()}set center(a){this.originalCenter=a}bind(a,b){this.model=a,this.animations=b||[],this.startAnimation()}toggleAnimations(){if(this.mixer&&this.animations.length)for(let a=0;a<this.animations.length;a++){const b=this.animations[a],c=this.mixer.existingAction(b);this.playAnimation?c.play():c.stop()}}startAnimation(){this.mixer=new d.AnimationMixer(this.model);for(let a=0;a<this.animations.length;a++){const b=this.animations[a],c=this.mixer.clipAction(b);this.playAnimation?c.play():c.stop()}}doAnimation(a){this.mixer&&this.mixer.update(a)}scale(a,b,c){this.model&&this.model.scale.set(a,b,c)}autoScale(){}position(a,b,c){const d=a-this.originalCenter.x,e=b-this.originalCenter.y,f=c-this.originalCenter.z;this.model&&this.model.position.set(d,e,f),this.recordPosition()}recordPosition(){this.model&&this.model.traverse((a)=>{"Mesh"===a.type&&(a.userData.initialPosition=a.position.clone(),a.userData.lastRecordPosition=a.position.clone())})}rotation(a,b,c){const d=a*Math.PI,e=b*Math.PI,f=c*Math.PI;this.model&&this.model.rotation.set(d,e,f)}initInteractiveMaterial(){const a=this.options.interactiveStyle.interactiveColor,b=e.Chroma(a).gl(),c=void 0===b[3]?1:b[3];this.activeMaterial=new d.ShaderMaterial({uniforms:{color:{value:new d.Vector3(b[0],b[1],b[2])},opacity:{value:c},intensity:{value:5}},vertexShader:g.vertexShader,fragmentShader:g.fragmentShader,transparent:!0})}upateActiveMaterial(a){const b=e.Chroma(a).gl(),c=void 0===b[3]?1:b[3];this.activeMaterial.uniforms.opacity.value=c,this.activeMaterial.uniforms.color.value=new d.Vector3(b[0],b[1],b[2])}interactive(a,b){if(this.scene=a,this.cleanActivedObject(),Array.isArray(b)&&b.length){const a=b[0].object.clone();a.traverse((a)=>{a.material&&(a.material=this.activeMaterial)}),this.scene.add(a),this.activeObjects.push(a)}}cleanActivedObject(){this.activeObjects.forEach((a)=>{a&&this.scene.remove(a),e.disposeNode(a)}),this.activeObjects=[]}getAngle(a){let b=Math.acos(a.x);return 0<a.z&&(b=2*Math.PI-b),b}startMoving(a,b,c,e){this.isMoving=!0,e=void 0!==e&&e;const f=new d.Vector3(0,1,0);let g=this.getAngle(new d.Vector3(c.rx,c.ry,c.rz).normalize());this.createEaseFunc(1,b,(b)=>{const c=a.parameters.path.getPointAt(b);this.position(c.x,c.y,c.z);const d=a.parameters.path.getTangent(b).normalize(),e=this.getAngle(d),h=e-g;this.model.quaternion.setFromAxisAngle(f,e),this.model.rotation.y+=h,g=e},()=>{this.isMoving&&e&&this.startMoving(a,b,c,e)})}stopMoving(){this.isMoving=!1}createEaseFunc(a,b,c,d){new e.TWEEN.Tween({value:0}).to({value:a},b).delay(0).onStart(function(){}).easing(e.TWEEN.Easing.Linear.None).onUpdate(function(){c&&c(this.value)}).onComplete(function(){e.TWEEN.remove(),console.log("its done"),d&&d()}).start()}translateById(a,b,c,f){f=f||0.5;const g=e.traverseAllChildsByName(this.model,a);g.length&&this.createEaseFunc(c,f,(a)=>{g.forEach((c)=>{const f=c.userData.lastRecordPosition,g=e.axisOffset(b,a,f);c.position.copy(new d.Vector3(g.x,g.y,g.z))})},()=>{g.forEach((a)=>{a.userData.lastRecordPosition=a.position.clone()})})}restoreById(a){const b=e.traverseAllChildsByName(this.model,a);b.length&&b.forEach((a)=>{a.position.copy(a.userData.initialPosition)})}translateAll(a,b,c){const f=[];this.model&&this.model.traverse((a)=>{"Mesh"===a.type&&f.push(a)}),f.length&&this.createEaseFunc(b,c,(b)=>{f.forEach((c)=>{const f=c.userData.lastRecordPosition,g=e.axisOffset(a,b,f);c.position.copy(new d.Vector3(g.x,g.y,g.z))})},()=>{f.forEach((a)=>{a.userData.lastRecordPosition=a.position.clone()})})}restoreAll(){this.model&&this.model.traverse((a)=>{"Mesh"===a.type&&a.position.copy(a.userData.initialPosition)})}explodedByDis(a){const b=new d.Box3,c=this.getCenter();this.model&&this.model.children.length&&this.model.children.forEach((d)=>{d.oriposition||(d.oriposition=d.position.clone());const e=b.setFromObject(d).getCenter(),f=e.sub(c).multiplyScalar(a),g=d.oriposition.clone().add(f);d.position.copy(g)})}dispose(){this.model=null,this.animations=null,this.mixer=null}}return a.exports=h,a.exports});;
Cube("datav:/com/datav-engine-models/0.0.28/layer.js",["datav:/npm/eventemitter3/3.0.0"],function(a,b,c){const d=c("datav:/npm/eventemitter3/3.0.0");return a.exports=class extends d{constructor(){super(),this.preSceneName="main",this.usingSceneName="main"}addTo(a){return a?void(this.viewer=a,this.Utils=a.Utils,this.controller=a.controller,this.scene=this.getAssignedScene(),this.viewer.on("projChanged",this.updatePostions.bind(this))):console.log("Layer needs viewer layer")}getProjPos(a,b,c){return this.viewer&&this.viewer.Projection([a,b,c])}updatePostions(){}getAssignedScene(){const a=this.options;return a.isSceneGroup&&a.sceneName?a.sceneName?this.controller.getScene(a.sceneName)?this.controller.getScene(a.sceneName):this.controller.createScene(a.sceneName):void 0:this.controller.getScene("main")}toggleScene(a,b,c){this.controller.switchScene(a,b,c).then(()=>{this.preSceneName=b,this.usingSceneName=c})}show(){throw new Error("method: show must be overwritten")}hide(){throw new Error("method: hide must be overwritten")}updateOptions(){}},a.exports});;
Cube("datav:/com/datav-engine-models/0.0.28",[],function(a,b,c){let d=null,e=null;const f=c("datav:/com/datav-engine-models/0.0.28/layer.js"),g=c("datav:/com/datav-engine-models/0.0.28/materials_manager"),h=c("datav:/com/datav-engine-models/0.0.28/actions_manager");return a.exports=class extends f{constructor(a,b){super(),this.options=Object.assign({visible:!0,playAnimation:!1,modelUrl:"http://sh-conf.oss-cn-shanghai.aliyuncs.com/korea-model.dae",interactiveStyle:{enableInteractive:!1,interactiveColor:"RGBA(79, 240, 252, 0.2)"},style:{isEnvMap:!0,envMapType:"cube",envMapIntensity:1,sphereEnvMapUrl:"https://sh-conf.oss-cn-shanghai.aliyuncs.com/expo/hdr/pisaHDR/nx.hdr",hdr_nx:"https://sh-conf.oss-cn-shanghai.aliyuncs.com/expo/hdr/pisaHDR/nx.hdr",hdr_ny:"https://sh-conf.oss-cn-shanghai.aliyuncs.com/expo/hdr/pisaHDR/ny.hdr",hdr_nz:"https://sh-conf.oss-cn-shanghai.aliyuncs.com/expo/hdr/pisaHDR/nz.hdr",hdr_px:"https://sh-conf.oss-cn-shanghai.aliyuncs.com/expo/hdr/pisaHDR/px.hdr",hdr_py:"https://sh-conf.oss-cn-shanghai.aliyuncs.com/expo/hdr/pisaHDR/py.hdr",hdr_pz:"https://sh-conf.oss-cn-shanghai.aliyuncs.com/expo/hdr/pisaHDR/pz.hdr",isWireFrame:!0,depthWrite:!1,scaleX:0.01,scaleY:0.01,scaleZ:0.01,opacity:1},explosionEffect:{isExplode:!1,explodeLevel:100},clippingEffect:{isCliped:!1,clipX:0,clipY:-1,clipZ:0,clipConstant:0},position:{offsetX:0,offsetY:0,offsetZ:0,rotationX:0,rotationY:0,rotationZ:0}},b||{}),this.modelUrl=null}addTo(a){super.addTo(a),d=a.three,e=a.Utils,this.renderer=a.renderer,this.materialsManager=new g(a,this.options),this.actionsManager=new h(d,e,this.options),this.clock=new d.Clock,this.animation=this.animation.bind(this),this.viewer.on("animationFrame",this.animation)}setData(a){if(a){this._data=a;let b=this.modelUrl;this.modelUrl=a.modelUrl?this.modelUrl===a.modelUrl?this.modelUrl:a.modelUrl:this.options.modelUrl,b!==this.modelUrl&&this.render(),a.data&&Array.isArray(a.data)&&(this.data=a.data,this.materialsManager.colorifyByData(this.data))}}render(){this.dispose();const a=this.options,b=a.style,c=a.position;this.materialsManager.fetch(this.modelUrl,(a)=>{this.model=a,this.scene.add(a.scene),this.actionsManager.bind(a.scene,a.animations),this.actionsManager.scale(b.scaleX,b.scaleY,b.scaleZ),this.actionsManager.rotation(c.rotationX,c.rotationY,c.rotationZ),this.actionsManager.center=this.actionsManager.getCenter(),this.printCenterInfo(),this.updatePostions(),this.actionsManager.isPlayAnimation=this.options.playAnimation,this.toggleModelClipping(),this.toggleModelExplosion(),this.colorify(),this.emit("loaded"),this.initInteractive(),this.checkVisible()})}printCenterInfo(){const a=this.actionsManager.originalCenter,b=e.narrowedMercator2latlng(a.x,a.y,a.z);console.log(`模型中心点经纬度: ${JSON.stringify(b)}`)}getProjPos(a,b,c){return this.viewer.Projection([a,b,c])}updatePostions(){const a=this.options.position,b=this.getProjPos(a.offsetX,a.offsetY,a.offsetZ);this.actionsManager&&this.actionsManager.position(b[0],b[1],b[2])}checkVisible(){let a=this.options;a.visible?this.show():this.hide()}show(){this.options.visible=!0,this.model&&this.model.scene&&(this.model.scene.visible=!0)}hide(){this.options.visible=!1,this.model&&this.model.scene&&(this.model.scene.visible=!1)}startMoving(a,b,c){if(!Array.isArray(a)||!a.length)return;const e=this.options.position,f={rx:e.rotationX,ry:e.rotationY,rz:e.rotationZ},g=[];a.forEach((a)=>{const b=this.getProjPos(a[0],a[1],a[2]);g.push(new d.Vector3(b[0],b[1],b[2]))});const h=new d.CatmullRomCurve3(g),i=new d.TubeBufferGeometry(h,5*h.points.length,0.2,6,!1);this.actionsManager&&this.actionsManager.startMoving(i,b,f,c)}stopMoving(){this.actionsManager&&this.actionsManager.stopMoving()}colorify(){const a=this.options.style;this.materialsManager.toggleEnvMap(),this.materialsManager.setGlobalType(a.materialType),this.materialsManager.colorifyGlobal(a.opacity,a.depthWrite,a.isWireFrame),this.materialsManager.colorifyByData(this.data)}toggleModelClipping(){let a=this.options.clippingEffect;a.isCliped&&this.setClipPlane(),this.toggleRendererClip(),this.model&&this.model.scene.traverse((a)=>{"Mesh"===a.type&&this.toggleMeshClip(a)})}toggleRendererClip(){this.renderer.localClippingEnabled=this.options.clippingEffect.isCliped}toggleMeshClip(a){this.options.clippingEffect.isCliped?(a.material.clippingPlanes=[this.localPlane],a.material.clipShadows=!0):(a.material.clippingPlanes=null,a.material.clipShadows=!1)}setClipPlane(){let a=this.options.clippingEffect,b=new d.Vector3(a.clipX,a.clipY,a.clipZ).normalize();this.localPlane=new d.Plane(b,a.clipConstant)}toggleModelExplosion(){let a=this.options.explosionEffect;if(a.isExplode){let b=a.explodeLevel;this.actionsManager.explodedByDis(b)}else this.actionsManager.explodedByDis(0)}animation(){this.actionsManager&&this.actionsManager.doAnimation(this.clock.getDelta()),this.materialsManager&&this.materialsManager.doRender(this.viewer.renderer)}updateModel(){this.render()}initInteractive(){this.viewer.interactive.pick(this.model.scene,(a)=>{const b=this.options.interactiveStyle.enableInteractive;b&&this.actionsManager.interactive(this.model.scene,a),b&&Array.isArray(a)&&b&&this.emit("interactive",a.length?a[0].object:null)})}updateOptions(a){const b=e.deepClone(this.options);this.options=e.mergeOptions(this.options,a||{});const c=a.style,d=a.position;if(e.easyDiff(b.modelUrl,a.modelUrl)||this._data.modelUrl||(this.modelUrl=a.modelUrl,this.updateModel()),e.easyObjDiff(b.position,a.position)||(this.actionsManager.rotation(d.rotationX,d.rotationY,d.rotationZ),this.updatePostions()),e.easyObjDiff(b.style,a.style)||(this.materialsManager.updateOptions(this.options),this.colorify()),this.checkVisible(),e.easyDiff(b.style.hdr_nx,a.style.hdr_nx)&&e.easyDiff(b.style.hdr_ny,a.style.hdr_ny)&&e.easyDiff(b.style.hdr_nz,a.style.hdr_nz)&&e.easyDiff(b.style.hdr_px,a.style.hdr_px)&&e.easyDiff(b.style.hdr_py,a.style.hdr_py)&&e.easyDiff(b.style.hdr_pz,a.style.hdr_pz)||this.materialsManager.createCubeEnvMap().then(()=>{this.colorify()}),e.easyDiff(b.style.sphereEnvMapUrl,a.style.sphereEnvMapUrl)||this.materialsManager.createSphereEnvMap().then(()=>{this.colorify()}),e.easyDiff(b.style.scaleX,a.style.scaleX)&&e.easyDiff(b.style.scaleY,a.style.scaleY)&&e.easyDiff(b.style.scaleZ,a.style.scaleZ)||this.actionsManager.scale(c.scaleX,c.scaleY,c.scaleZ),e.easyObjDiff(b.clippingEffect,a.clippingEffect)||this.toggleModelClipping(),e.easyObjDiff(b.explosionEffect,a.explosionEffect)||this.toggleModelExplosion(),b.playAnimation!==a.playAnimation&&(this.actionsManager.isPlayAnimation=a.playAnimation),!e.easyDiff(b.interactiveStyle,a.interactiveStyle)){const b=a.interactiveStyle.interactiveColor;this.actionsManager.upateActiveMaterial(b)}e.easyDiff(b.sceneName,a.sceneName)||(this.scene=this.getAssignedScene(),this.toggleScene(this.model.scene,this.usingSceneName,a.sceneName))}dispose(){this.model&&this.scene.remove(this.model.scene),this.materialsManager.dispose(),this.actionsManager.dispose()}remove(){this.viewer.off("animationFrame",this.animation),this.off("loaded"),this.off("interactive"),this.dispose()}},a.exports});