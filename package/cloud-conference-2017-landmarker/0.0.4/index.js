// env=undefined => env=publish 
Cube("datav:/com/cloud-conference-2017-landmarker/0.0.4/Marker.js",["datav:/npm/three/0.83.0"],function(a,b,c){const d=c("datav:/npm/three/0.83.0");class e extends d.Object3D{constructor(a){super(),this.spriteTexture=a.spriteTexture||"https://img.alicdn.com/tfs/TB1hGrFSFXXXXXfapXXXXXXXXXX-128-128.png",this.spriteSizeScale=a.spriteSizeScale||1,this.spriteHeightPosition=a.spriteHeightPosition||10,this.spriteOpacity=a.spriteOpacity||1,this.lineHeightPosition=this.spriteHeightPosition,this.lineColor=a.lineColor||"#ff1100",this.lineOpacity=a.lineOpacity||0.6,this.build()}build(){this;this.mesh=new d.Object3D,this.textureLoader=new d.TextureLoader().setCrossOrigin("*"),this.spriteMaterial=new d.SpriteMaterial({map:this.textureLoader.load(this.spriteTexture),transparent:!0,opacity:0.8}),this.sprite=new d.Sprite(this.spriteMaterial),this.sprite.scale.x=this.sprite.scale.y=this.spriteSizeScale,this.sprite.position.z=this.spriteHeightPosition,this.mesh.add(this.sprite),this.lineVertices=new d.LineCurve3(new d.Vector3(0,0,0),new d.Vector3(0,0,this.lineHeightPosition)),this.lineGeometry=new d.Geometry,this.lineGeometry.vertices=this.lineVertices.getPoints(10),this.lineGeometry.verticesNeedUpdate=!0,this.lineGeometry.elementsNeedUpdate=!0,this.lineMaterial=new d.LineBasicMaterial({color:this.lineColor,transparent:!0,opacity:this.lineOpacity}),this.line=new d.Line(this.lineGeometry,this.lineMaterial),this.mesh.add(this.line)}}return a.exports=e,a.exports});;
Cube("datav:/com/cloud-conference-2017-landmarker/0.0.4/LandmarkerLayer",["datav:/npm/three/0.83.0","datav:/npm/chroma-js/1.3.4","datav:/npm/bcore/0.0.21/utils","datav:/npm/bcore/0.0.21/event"],function(a,b,c){const d=c("datav:/npm/three/0.83.0"),e=c("datav:/npm/chroma-js/1.3.4"),f=c("datav:/npm/bcore/0.0.21/utils"),g=c("datav:/npm/bcore/0.0.21/event"),h=c("datav:/com/cloud-conference-2017-landmarker/0.0.4/Marker.js"),i={};return a.exports=class extends g{constructor(a){super(),this.options=f.deepMerge(i,a||{}),this.init()}init(){this.meshGroup=new d.Group,this.markerList=[]}addTo(a){a||console.error("marker need scene"),this.scene=a}setData(a){if(this.data=a||[],this.data&&this.data.length){this.disposeMesh();let a={spriteTexture:this.options.markerSprite.spriteTexture,spriteSizeScale:this.options.markerSprite.spriteSizeScale,spriteHeightPosition:this.options.markerSprite.spriteHeightPosition,spriteOpacity:this.options.markerSprite.spriteOpacity,lineColor:this.options.markerLine.lineColor,lineOpacity:this.options.markerLine.lineOpacity};for(let b=0;b<this.data.length;b++){let c=this.data[b],d=new h(a);d.mesh.position.set(c.x,c.y,0),d.mesh.position.z=this.options.heightPosition,this.meshGroup.add(d.mesh),this.markerList.push(d)}this.meshGroup.visible=this.options.visibility,this.scene.add(this.meshGroup)}}disposeMesh(){for(let a,b=this.meshGroup.children.length-1;0<=b;b--)a=this.meshGroup.children[b],this.meshGroup.remove(a),a.children.forEach((a)=>{a.geometry&&a.geometry.dispose(),a.material.map&&a.material.map.dispose(),a.material.dispose(),a=null}),a=null;this.markerList=[]}updateOptions(a){this.options=f.deepMerge(this.options,a||{}),this.markerList.forEach((a)=>{a.spriteMaterial.map=a.textureLoader.load(this.options.markerSprite.spriteTexture),a.spriteMaterial.opacity=this.options.markerSprite.spriteOpacity,a.spriteMaterial.needsUpdate=!0,a.sprite.scale.x=a.sprite.scale.y=this.options.markerSprite.spriteSizeScale,a.sprite.position.z=this.options.markerSprite.spriteHeightPosition;let b=new d.LineCurve3(new d.Vector3(0,0,0),new d.Vector3(0,0,this.options.markerSprite.spriteHeightPosition));a.lineGeometry.vertices=b.getPoints(10),a.lineGeometry.verticesNeedUpdate=!0,a.lineGeometry.elementsNeedUpdate=!0;let c=e(this.options.markerLine.lineColor).gl();a.lineMaterial.color.r=c[0],a.lineMaterial.color.g=c[1],a.lineMaterial.color.b=c[2],a.lineMaterial.opacity=this.options.markerLine.lineOpacity,a.lineMaterial.needsUpdate=!0,a.mesh.position.z=this.options.heightPosition}),this.meshGroup.visible=this.options.visibility}remove(){this.scene.remove(this.meshGroup),this.meshGroup.children.forEach((a)=>{this.meshGroup.remove(a),a.children.forEach((a)=>{a.geometry&&a.geometry.dispose(),a.material.map&&a.material.map.dispose(),a.material.dispose(),a=null}),a=null}),this.meshGroup=null,this.markerList=[]}},a.exports});;
Cube("datav:/com/cloud-conference-2017-landmarker/0.0.4",["datav:/npm/three/0.83.0","datav:/npm/bcore/0.0.21/utils","datav:/npm/bcore/0.0.21/event"],function(a,b,c){const d=c("datav:/npm/three/0.83.0"),e=c("datav:/npm/bcore/0.0.21/utils"),f=c("datav:/npm/bcore/0.0.21/event"),g=c("datav:/com/cloud-conference-2017-landmarker/0.0.4/LandmarkerLayer"),h={};return a.exports=class extends f{constructor(a,b){super(),this.options=e.deepMerge(h,b||{})}initLayer(){let a=this.getOptions();this.layer=new g(a),this.layer.addTo(this.scene)}addTo(a){a||console.error("heatmap need scene"),this.scene=a,this.initLayer()}getOptions(){return this.options}remove(){this.layer&&this.layer.remove&&this.layer.remove(),this.layer=null}render(a){return a?void(this.layer&&this.layer.setData(a)):console.log("\u9759\u6B62\u6807\u8BC6\u7EC4\u4EF6\u9700\u8981\u6570\u636E......")}updateOptions(a){this.options=e.deepMerge(this.options,a||{}),this.layer&&this.layer.updateOptions(this.options)}},a.exports});