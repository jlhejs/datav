// env=undefined => env=publish 
Cube("datav:/com/@xhzy-anime/scatter_basic/0.0.2",["datav:/npm/bcore/0.0.18/event","datav:/npm/jquery/3.3.1","datav:/npm/lodash/4.17.11","datav:/npm/vizz/0.2.30"],function(a,b,c){var d=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},e=c("datav:/npm/bcore/0.0.18/event"),f=c("datav:/npm/jquery/3.3.1"),g=c("datav:/npm/lodash/4.17.11"),h=c("datav:/npm/vizz/0.2.30");return a.exports=e.extend(function(a,b){var c=this;this.config={theme:{}},this.container=f(a),this.apis=b.apis,this._data=null,this.chart=null,this.option=null,this.init(b),this.finish=function(a){var b=a.data,d=a.duration,e=new Date().getTime();c.myReq=requestAnimationFrame(function a(){var f=new Date().getTime();f-e<d?c.myReq=requestAnimationFrame(a):(c.emit("finish",{data:b}),cancelAnimationFrame(c.myReq))})},this.getColor=function(a){var b=a.angle/180*Math.PI,c="single"===a.style?a.value:{x:b<=Math.PI?0:Math.sin(b-Math.PI),y:b>Math.PI/2&&b<3*Math.PI/2?Math.sin(b-Math.PI/2):0,x2:b<=Math.PI?Math.sin(b):0,y2:b>Math.PI/2&&b<3*Math.PI/2?0:Math.cos(b),colorStops:[{offset:0,color:a.from},{offset:1,color:a.to}]};return c}},{init:function(a){this.mergeConfig(a),this.updateLayout(),this.updateStyle()},render:function(a,b){var c=this;a=this.data(a);var d=this.mergeConfig(b);this.chart=h.init(this.container[0]),this.eachDuration=1e3*d.options.others.animation.animationDuration/a.length,this.option={data:[{originData:a}],grid:[{left:d.options.chart.grid.left,right:d.options.chart.grid.right,top:d.options.chart.grid.top,bottom:d.options.chart.grid.bottom}],series:[{type:"scatter",$dataIndex:0,dataKey:["x","y"],symbol:{style:{shadowBlur:d.options.series.scatter.shadowBlur,shadowOffsetX:2,shadowColor:d.options.series.scatter.shadowColor,fill:this.getColor(d.options.series.scatter.fill)},size:d.options.series.scatter.size},animationDelay:function(a){return a*c.eachDuration}},{type:"line",data:function(a,c,e){var d=a.map(function(a){return a[c]}),f=a.map(function(a){return a[e]}),g=0,h=0,i=0,j=0,k=0,c=0,e=0,l=d.length;if(l!=f.length)throw new Error("The parameters values_x and values_y need to have same size!");if(0===l)return[[],[]];for(var n=0;n<l;n++)c=d[n],e=f[n],g+=c,h+=e,j+=c*c,i+=c*e,k++;for(var o=(k*i-g*h)/(k*j-g*g),m=h/k-o*g/k,b=[],n=0;n<l;n++)c=d[n],e=c*o+m,b.push([c,e]);return b}(a,"x","y"),line:{style:{lineWidth:d.options.series.line.isShow?d.options.series.line.lineWidth:0,stroke:d.options.series.line.stroke}},animationDelay:1e3*d.options.others.animation.animationDuration,animationDuration:1e3,z:9}],axis:[{xOrY:"x",position:"bottom",type:"linear",$dataIndex:0,dataKey:"x",label:{padding:d.options.axis.xAxis.label.padding,rotate:d.options.axis.xAxis.label.rotate,style:{fill:d.options.axis.xAxis.label.text.color,fontSize:d.options.axis.xAxis.label.text.fontSize,fontWeight:d.options.axis.xAxis.label.text.fontWeight,fontFamily:d.options.axis.xAxis.label.text.fontFamily}},line:{show:d.options.axis.xAxis.line.show,style:{stroke:d.options.axis.xAxis.line.stroke,lineWidth:d.options.axis.xAxis.line.lineWidth}},nice:!0},{position:"left",type:"linear",xOrY:"y",label:{padding:d.options.axis.yAxis.label.padding,rotate:d.options.axis.yAxis.label.rotate,style:{fill:d.options.axis.yAxis.label.text.color,fontSize:d.options.axis.yAxis.label.text.fontSize,fontWeight:d.options.axis.yAxis.label.text.fontWeight,fontFamily:d.options.axis.yAxis.label.text.fontFamily}},line:{show:d.options.axis.yAxis.line.show,style:{stroke:d.options.axis.yAxis.line.stroke,lineWidth:d.options.axis.yAxis.line.lineWidth}},nice:!0}]},this.chart.setOption(this.option);var e=1e3*d.options.others.animation.animationDelay+1e3*d.options.others.animation.animationDuration;this.finish({data:a,duration:e}),this.updateStyle()},resize:function(a,b){this.updateLayout(a,b),this.chart.resize(),this.chart.setOption(this.option)},setColors:function(){},data:function(a){return a&&(this._data=a),this._data},mergeConfig:function(a){return a?(this.config.theme=g.defaultsDeep(a.theme||{},this.config.theme),this.setColors(),this.config=g.defaultsDeep(a||{},this.config),this.config):this.config},updateLayout:function(){},updateStyle:function(){},updateOptions:function(a){var b=this;this.option.axis[0].interval=a.options.axis.xAxis.label.interval,this.option.axis[0].label={padding:a.options.axis.xAxis.label.padding,rotate:a.options.axis.xAxis.label.rotate,style:d({},this.option.axis[0].label.style,a.options.axis.xAxis.label.text,{fill:a.options.axis.xAxis.label.text.color})},this.option.axis[0].line={show:a.options.axis.xAxis.line.show,style:{stroke:a.options.axis.xAxis.line.stroke,lineWidth:a.options.axis.xAxis.line.lineWidth}},this.option.axis[1].label={show:a.options.axis.yAxis.show,padding:a.options.axis.yAxis.label.padding,rotate:a.options.axis.yAxis.label.rotate,style:d({},this.option.axis[1].label.style,a.options.axis.yAxis.label.text,{fill:a.options.axis.yAxis.label.text.color})},this.option.axis[1].line={show:a.options.axis.yAxis.line.show,style:{stroke:a.options.axis.yAxis.line.stroke,lineWidth:a.options.axis.yAxis.line.lineWidth}},this.option.series[0].symbol.size=a.options.series.scatter.size,this.option.series[0].symbol.style=d({},this.option.series[0].symbol.style,{shadowBlur:a.options.series.scatter.shadowBlur,shadowColor:a.options.series.scatter.shadowColor,fill:this.getColor(a.options.series.scatter.fill)}),this.option.series[1].line.style={lineWidth:a.options.series.line.isShow?a.options.series.line.lineWidth:0,stroke:a.options.series.line.stroke};var c=this.data();this.eachDuration=1e3*a.options.others.animation.animationDuration/c.length,this.option.series[0].animationDelay=function(c){return c*b.eachDuration+1e3*a.options.others.animation.animationDelay},this.option.series[1].animationDelay=1e3*a.options.others.animation.animationDuration+1e3*a.options.others.animation.animationDelay,this.option.grid={left:a.options.chart.grid.left,right:a.options.chart.grid.right,top:a.options.chart.grid.top,bottom:a.options.chart.grid.bottom};var e=1e3*a.options.others.animation.animationDelay+1e3*a.options.others.animation.animationDuration;this.finish({data:c,duration:e}),this.chart.setOption(this.option)},destroy:function(){this.chart.clear()},getThemableConfig:function(a){if(!a)return null;var b={options:{axis:{xAxis:{label:{text:{color:a.textColor}},line:{stroke:a.axisColor}},yAxis:{label:{text:{color:a.textColor}},line:{stroke:a.axisColor},splitLine:{color:a.axisColor}}},series:{scatter:{fill:{style:"single",value:a.palette[0]}}}}};return b}}),a.exports});