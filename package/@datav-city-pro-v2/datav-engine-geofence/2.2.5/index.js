// env=undefined => env=publish 
Cube("datav:/com/@datav-city-pro-v2/datav-engine-geofence/2.2.5/shader/frag.glsl",[],function(e,o,n,c,d,i){return e.exports="#define GLSLIFY 1\nuniform vec4 u_top_color;\nuniform vec4 u_side_color;\nuniform vec4 u_side_tex_color;\nuniform vec4 u_clicked_color;\nuniform vec2 u_uvscale1;\nuniform vec2 u_uvscale2;\nuniform float u_speed1;\nuniform float u_speed2;\nuniform sampler2D u_side_tex;\nuniform sampler2D u_side_add_tex;\n\n#include <common>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n\nvarying vec2 vUv;\nvarying float vFaceType;\nflat varying int vPick;\nflat varying vec4 vCmSideColor;\n\nbool isPicked(int pick){\n  if(pick == 1){\n    return true;\n  }else{\n    return false;\n  }\n}\n\nvoid main() {\n  #include <logdepthbuf_fragment>\n\n  // 后期渲染模块会统一做gamma校正，\n  // 为了图元渲染颜色和配置项设置颜色保持一致，需要做以下处理以抵消\n\tvec4 u_top_color2 = vec4(pow(u_top_color.r, 2.2), pow(u_top_color.g, 2.2),pow(u_top_color.b, 2.2), u_top_color.a);\n\tvec4 u_side_color2 = vec4(pow(u_side_color.r, 2.2), pow(u_side_color.g, 2.2),pow(u_side_color.b, 2.2), u_side_color.a);\n\tvec4 u_side_tex_color2 = vec4(pow(u_side_tex_color.r, 2.2), pow(u_side_tex_color.g, 2.2),pow(u_side_tex_color.b, 2.2), u_side_tex_color.a);\n\tvec4 u_clicked_color2 = vec4(pow(u_clicked_color.r, 2.2), pow(u_clicked_color.g, 2.2),pow(u_clicked_color.b, 2.2), u_clicked_color.a);\n\tvec4 vCmSideColor2 = vec4(pow(vCmSideColor.r, 2.2), pow(vCmSideColor.g, 2.2),pow(vCmSideColor.b, 2.2), vCmSideColor.a);\n\n  // 顶面\n  if(abs(vFaceType - 2.0 ) < EPSILON){\n    #ifdef USE_TOP\n      if(isPicked(vPick)){\n        gl_FragColor = u_clicked_color2;\n      }else{\n        #ifdef USE_COLOR_MAPPING\n          gl_FragColor = vCmSideColor2;\n        #else\n          gl_FragColor = u_top_color2;\n        #endif\n      }\n    #endif\n\n  } else if(abs(vFaceType - 1.0 ) < EPSILON){\n    // 侧面\n    vec2 uv1 = vUv * u_uvscale1;\n    vec2 uv2 = vUv * u_uvscale2;\n\n    #ifdef USE_ANIMTYPE\n      uv1.x += u_speed1;\n      uv2.x += u_speed2;\n    #else\n      uv1.y -= u_speed1;\n      uv2.y -= u_speed2;\n    #endif\n\n    vec4 sideTex = texture2D(u_side_tex, uv1);\n    vec4 sideAddTex = texture2D(u_side_add_tex, uv2);\n\n    sideTex = mix(vec4(.0), sideTex, sideTex.a);\n    sideAddTex = mix(sideAddTex, vec4(1.0), sideAddTex);\n\n    vec4 addcolor = sideTex + sideAddTex;\n    addcolor *= u_side_tex_color2;\n\n    vec4 color = vec4(1.0);\n    if(isPicked(vPick)){\n      color = mix(u_clicked_color2, addcolor, addcolor);\n    }else{\n      #ifdef USE_COLOR_MAPPING\n        color = mix(vCmSideColor2, addcolor, addcolor);;\n      #else\n        color = mix(u_side_color2, addcolor, addcolor);\n      #endif\n    }\n    \n    float opacity = 1.5;\n\n    #ifdef USE_GRADIENT\n      opacity *= pow(1. - vUv.y, 2.0);\n    #endif\n\n    gl_FragColor = vec4(color.rgb, opacity * color.a);\n\n  } else {\n    // 底面\n    discard;\n  }\n\n  #include <fog_fragment>\n  #include <premultiplied_alpha_fragment>\n}",e.exports});;
Cube("datav:/com/@datav-city-pro-v2/datav-engine-geofence/2.2.5/shader/vert.glsl",[],function(e,n,i,t,o,v){return e.exports="#define GLSLIFY 1\nvarying vec2 vUv;\nattribute float faceType;\nattribute int pick;\nattribute vec4 cmSideColor;\nvarying float vFaceType;\nflat varying int vPick;\nflat varying vec4 vCmSideColor;\n\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n\nvoid main() {\n  vUv = uv;\n  vFaceType = faceType;\n  vPick = pick;\n  vCmSideColor = cmSideColor;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  #include <fog_vertex>\n  #include <logdepthbuf_vertex>\n}",e.exports});;
Cube("datav:/com/@datav-city-pro-v2/datav-engine-geofence/2.2.5/getCenter",[],function(r,t,e,n,o,a){function b(r,t){return function(r){if(Array.isArray(r))return r}(r)||function(r,t){var e=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=e){var n,o,a=[],l=!0,i=!1;try{for(e=e.call(r);!(l=(n=e.next()).done)&&(a.push(n.value),!t||a.length!==t);l=!0);}catch(r){i=!0,o=r}finally{try{l||null==e.return||e.return()}finally{if(i)throw o}}return a}}(r,t)||function(r,t){var e;if(r)return"string"==typeof r?l(r,t):"Map"===(e="Object"===(e=Object.prototype.toString.call(r).slice(8,-1))&&r.constructor?r.constructor.name:e)||"Set"===e?Array.from(r):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?l(r,t):void 0}(r,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}return r.exports=function(r){var t=(r=r.geometry).type,e=r.coordinates,n=180,o=-180,a=90,l=-90,i=1e6,u=-1e6;function f(r,t,e){n=r<n?r:n,o=o<r?r:o,a=t<a?t:a,l=l<t?t:l,i=e<i?e:i,u=u<e?e:u}if("Polygon"===t)for(var c=0;c<e.length;c++)for(var v=0;v<e[c].length;v++){var y=b(e[c][v],3),g=y[0],s=y[1],y=y[2];f(g,s,void 0===y?0:y)}else if("MultiPolygon"===t)for(var d=0;d<e.length;d++)for(var h=0;h<e[d].length;h++)for(var p=0;p<e[d][h].length;p++){var m=b(e[d][h][p],3),m=(g=m[0],s=m[1],m[2]);f(g,s,void 0===m?0:m)}return[(n+o)/2,(a+l)/2,(i+u)/2]},r.exports});;
Cube("datav:/com/@datav-city-pro-v2/datav-engine-geofence/2.2.5/geofence",["datav:/npm/alibabacloud-datav-tool-gui-utils/1.0.2"],function(e,t,m,i,r,a){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var i=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=i){var r,a,n=[],o=!0,s=!1;try{for(i=i.call(e);!(o=(r=i.next()).done)&&(n.push(r.value),!t||n.length!==t);o=!0);}catch(e){s=!0,a=e}finally{try{o||null==i.return||i.return()}finally{if(s)throw a}}return n}}(e,t)||d(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(e,t){var i;if(e)return"string"==typeof e?o(e,t):"Map"===(i="Object"===(i=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:i)||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?o(e,t):void 0}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,r=new Array(t);i<t;i++)r[i]=e[i];return r}function h(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(){return(v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,i){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=b(e)););return e}(e,t);if(r)return(r=Object.getOwnPropertyDescriptor(r,t)).get?r.get.call(arguments.length<3?e:i):r.value}).apply(this,arguments)}function y(e,t){return(y=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function g(i){var r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}();return function(){var e,t=b(i),t=(e=r?(e=b(this).constructor,Reflect.construct(t,arguments,e)):t.apply(this,arguments),this);if(e&&("object"===n(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");if(void 0!==t)return t;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}}function b(e){return(b=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}return e.exports=function(e){var p=e.THREE,f=e.Utils,r=e.VG,t=e.geoUtils,t=void 0===t?{}:t,i=r.Layer,a=new p.TextureLoader;a.setCrossOrigin("*");var n=m("datav:/npm/alibabacloud-datav-tool-gui-utils/1.0.2").scale.color,s=(s=t.getPolygonCenter)||m("datav:/com/@datav-city-pro-v2/datav-engine-geofence/2.2.5/getCenter"),t=u;if("function"!=typeof i&&null!==i)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(i&&i.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),i&&y(t,i);var o,l=g(u);function u(e){var t;if(this instanceof u)return(t=l.call(this)).classNameAlias="GeofenceLayer",t.layerName=t.classNameAlias,t.renderQueue=r.Geometry,t.needsAutoUpdate=!0,t.options=Object.assign({isSceneGroup:!1,sceneId:["scene1"],visible:!0},e||{}),t.needsWait=!0,t.promiseList=[],t.enableInteractive=t.options.options.interaction.enableInteractive,t.highlightedMeshArr=[],t.intersectObj=null,t.data2draw=[],t.sideColorMapping=t.options.options.graph.sideColor.mapping||!1,t;throw new TypeError("Cannot call a class as a function")}return t=u,(i=[{key:"addTo",value:function(e){v(b(u.prototype),"addTo",this).call(this,e),this.material=this.initMaterial(),this.meshMap=new Map,this.initStaticTexture()}},{key:"initMaterial",value:function(){var e=this.options.options,t=e.general,i=e.graph,r=e.interaction,e=e.animate,a=i.isTop,n=i.isGradient,o=i.topColor,s=i.sideColor,l=i.sideTexture,i=i.sideAddTexture,r=r.interactiveColor,e=e.animType,u=t.blendingType,c=t.depthWrite,t=t.depthTest,d=l.sideTexColor,l=l.uvScale1,i=i.uvScale2,o=f.Chroma(o).gl(),h=(s.mapping?f.Chroma(s.fixed):f.Chroma(s)).gl(),d=f.Chroma(d).gl(),r=f.Chroma(r).gl(),o=p.UniformsUtils.merge([p.UniformsLib.fog,{u_top_color:{value:new p.Vector4(o[0],o[1],o[2],o[3])},u_side_color:{value:new p.Vector4(h[0],h[1],h[2],h[3])},u_side_tex_color:{value:new p.Vector4(d[0],d[1],d[2],d[3])},u_clicked_color:{value:new p.Vector4(r[0],r[1],r[2],r[3])},u_uvscale1:{value:new p.Vector2(l.x,l.y)},u_uvscale2:{value:new p.Vector2(i.x,i.y)},u_speed1:{value:0},u_speed2:{value:0},u_side_tex:{value:null},u_side_add_tex:{value:null}}]);return new p.ShaderMaterial({uniforms:o,vertexShader:m("datav:/com/@datav-city-pro-v2/datav-engine-geofence/2.2.5/shader/vert.glsl"),fragmentShader:m("datav:/com/@datav-city-pro-v2/datav-engine-geofence/2.2.5/shader/frag.glsl"),blending:p[u],side:p.DoubleSide,transparent:!0,depthWrite:c,depthTest:t,fog:!0,defines:{USE_TOP:a,USE_GRADIENT:n,USE_ANIMTYPE:"horizontal"===e,USE_COLOR_MAPPING:!!s.mapping}})}},{key:"initStaticTexture",value:function(){var e=this.options.options.graph,t=e.sideTexture,e=e.sideAddTexture,t=t.sideTextureUrl,e=e.sideAddTextureUrl;this.material.uniforms.u_side_tex.value=(new p.TextureLoader).setCrossOrigin("*").load(t),this.material.uniforms.u_side_add_tex.value=(new p.TextureLoader).setCrossOrigin("*").load(e),this.material.uniforms.u_side_tex.value.wrapS=p.RepeatWrapping,this.material.uniforms.u_side_tex.value.wrapT=p.RepeatWrapping,this.material.uniforms.u_side_add_tex.value.wrapS=p.RepeatWrapping,this.material.uniforms.u_side_add_tex.value.wrapT=p.RepeatWrapping}},{key:"setData",value:function(e){var a=this;if(!e)return this.emit("rendered"),console.error("".concat(this.classNameAlias,": no data."));this.clear(),this.needsWait=!0,this.data=e;var t=this.options.options.general,i=t.geofenceHeight,t=t.offsetHeight,n={standard:!0,isCenter:!0,withTop:!0,withBottom:!0,base:t,top:t+i,projType:r.EPSG4978};if(this.isGeoJson(e)){if(!e.features.length)return this.emit("rendered"),console.error("".concat(this.classNameAlias,": data length is 0, ").concat(e,"."));e.features.forEach(function(e,t){var i={geojson:{type:"FeatureCollection",features:[e]},options:n},e=e.properties;e.id=void 0!==e.id?e.id:t,a.extrudePromise(i,e)})}else if(Array.isArray(e)){if(!e.length)return this.emit("rendered"),console.error("".concat(this.classNameAlias,": data length is 0, ").concat(e,"."));e.forEach(function(t,e){var i={},r=(Object.keys(t).forEach(function(e){"geometry"!==e&&(i[e]=t[e])}),{geojson:{type:"FeatureCollection",features:[{type:"Feature",properties:i,geometry:t.geometry}]},options:n});i.id=void 0!==i.id?i.id:e,a.extrudePromise(r,i)})}Promise.all(this.promiseList).then(function(){a.needsWait&&(a.emit("rendered"),a.needsWait=!1)}).catch(function(e){a.needsWait&&(a.emit("rendered"),a.needsWait=!1)}),this.once("rendered",function(){a.updateSideColor(a.options.options.graph.sideColor)})}},{key:"extrudePromise",value:function(a,n){var o=this;this.promiseList.push(new Promise(function(r){e.superWorker.executeAsPromise("GEOJSON-EXTRUDE",[a.geojson,a.options]).then(function(e){var e=o.createMesh(e),t=c(a.geojson.features,1)[0],i=s(t);e.userData.geojson=t,e.userData.center=i,o.meshMap.set(e,n),o.data2draw.push({colorField:n.colorField,id:n.id,vismapProperties:{},mesh:e}),r()})}))}},{key:"dataErrorHandler",value:function(){this.emit("rendered"),this.needsWait=!1}},{key:"allowPicking",get:function(){return this.enableInteractive}},{key:"active",value:function(e){var t,i=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];e&&((t=e.geometry.attributes.pick).array.fill(1),t.needsUpdate=!0,i&&(this.intersectObj=e,this.emitCallBack(e)))}},{key:"inactive",value:function(){this.recoverActivited(!0)}},{key:"highlight",value:function(){var e,t=this,i=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],r=(this.highlightedMeshArr.length=0,function(e,t){var i,r,a,n,o="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(o)return r=!(i=!0),{s:function(){o=o.call(e)},n:function(){var e=o.next();return i=e.done,e},e:function(e){r=!0,a=e},f:function(){try{i||null==o.return||o.return()}finally{if(r)throw a}}};if(Array.isArray(e)||(o=d(e))||t&&e&&"number"==typeof e.length)return o&&(e=o),n=0,{s:t=function(){},n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(this.meshMap.entries()));try{for(r.s();!(e=r.n()).done;){var a=c(e.value,2),n=a[0],o=a[1];o&&i.includes(o.id)&&this.highlightedMeshArr.push(n)}}catch(e){r.e(e)}finally{r.f()}return!!this.highlightedMeshArr.length&&(this.highlightedMeshArr.forEach(function(e){return t.active(e,!1)}),!0)}},{key:"unhightlight",value:function(){var t=this;this.highlightedMeshArr.forEach(function(e){return t.recoverActivited(!1,e)})}},{key:"emitCallBack",value:function(e){var t=this.options.options.interaction.callBackId,e=this.meshMap.get(e);e&&(e=e[t],t&&this.emit("layer_global_var",{callBackId:t,callBackValue:e}))}},{key:"recoverActivited",value:function(){var e=!(0<arguments.length&&void 0!==arguments[0])||arguments[0],t=e?this.intersectObj:1<arguments.length?arguments[1]:void 0;t&&((t=t.geometry.attributes.pick).array.fill(0),t.needsUpdate=!0,e&&(this.intersectObj=null))}},{key:"createMesh",value:function(e){var t=this.genGeometry(e),t=new p.Mesh(t,this.material);return t.position.fromArray(e.center),this.add(t),this.checkVisible(),t}},{key:"genGeometry",value:function(e){var t=e.positions,i=e.uvs,r=e.normals,e=e.faceType,a=new p.BufferGeometry,i=(a.setAttribute("uv",new p.BufferAttribute(i,2)),a.setAttribute("normal",new p.BufferAttribute(r,3)),a.setAttribute("position",new p.BufferAttribute(t,3)),a.setAttribute("faceType",new p.BufferAttribute(new Float32Array(e),1)),a.attributes.uv.count),r=new Int32Array(i).fill(0),t=(a.setAttribute("pick",new p.BufferAttribute(r,1)),new Float32Array(4*i).fill(0));return a.setAttribute("cmSideColor",new p.BufferAttribute(t,4)),a.computeBoundingSphere(),a.computeBoundingBox(),a}},{key:"isGeoJson",value:function(e){return!!(e&&e.features&&Array.isArray(e.features)&&0<e.features.length)}},{key:"animation",value:function(){var e=this.options.options.animate.speed,t=e.speed1,e=e.speed2;this.material&&(this.material.uniforms.u_speed1.value<=10?this.material.uniforms.u_speed1.value+=t:this.material.uniforms.u_speed1.value=0,this.material.uniforms.u_speed2.value<=10?this.material.uniforms.u_speed2.value+=e:this.material.uniforms.u_speed2.value=0)}},{key:"autoUpdate",value:function(){this.animation()}},{key:"checkVisible",value:function(){this.options.visible?this.show():this.hide()}},{key:"show",value:function(){this.options.visible=!0,v(b(u.prototype),"show",this).call(this)}},{key:"hide",value:function(){this.options.visible=!1,v(b(u.prototype),"hide",this).call(this)}},{key:"enableInteractiveHandler",value:function(e){(this.enableInteractive=e)||this.recoverActivited(!0)}},{key:"interactiveColorHandler",value:function(e){this.material&&(e=f.Chroma(e).gl(),this.material.uniforms.u_clicked_color.value.set(e[0],e[1],e[2],e[3]))}},{key:"sideTextureUrlHandler",value:function(e){this.material.uniforms.u_side_tex.value=a.load(e),this.material.uniforms.u_side_tex.value.wrapS=p.RepeatWrapping,this.material.uniforms.u_side_tex.value.wrapT=p.RepeatWrapping}},{key:"sideAddTextureUrlHandler",value:function(e){this.material.uniforms.u_side_add_tex.value=a.load(e),this.material.uniforms.u_side_add_tex.value.wrapS=p.RepeatWrapping,this.material.uniforms.u_side_add_tex.value.wrapT=p.RepeatWrapping}},{key:"updateSideColor",value:function(e){var i,t,r=this;if(e&&this.material){if(this.options.options.graph.sideColor=e,this.sideColorMapping&&void 0===e.mapping)return console.log("地理围栏：视觉映射与关键帧动画互斥，请关闭其中一个！");this.material.defines.USE_COLOR_MAPPING=!!e.mapping,e.mapping?(this.sideColorMapping=!0,this.colorConfig=e,i=n({config:e,data:this.data2draw,field:"colorField"}),this.data2draw.forEach(function(e){var t=i(e);e.vismapProperties.color=t,r.updateMeshSideColorAttr(e.mesh.geometry,t)})):void 0!==e.mapping?(this.sideColorMapping=!1,t=e.fixed,t=f.Chroma(t).gl(),this.material.uniforms.u_side_color.value.set(t[0],t[1],t[2],t[3])):void 0!==e.r?this.material.uniforms.u_side_color.value.set(e.r,e.g,e.b,e.a):(t=f.Chroma(e).gl(),this.material.uniforms.u_side_color.value.set(t[0],t[1],t[2],t[3])),this.material.needsUpdate=!0}}},{key:"updateMeshSideColorAttr",value:function(e,t){for(var i=f.Chroma(t).gl(),t=e.attributes.cmSideColor,r=t.array,a=t.count,n=0;n<a;n++)r[4*n]=i[0],r[4*n+1]=i[1],r[4*n+2]=i[2],r[4*n+3]=i[3];t.needsUpdate=!0}},{key:"getSideColorInOption",value:function(){var e=this.options.options.graph.sideColor;return void 0!==e.mapping?e.fixed:e}},{key:"updateOptions",value:function(e){var t=f.deepClone(this.options),i=(this.options=f.mergeOptions(this.options,e||{}),this.options.options),r=i.general,a=i.graph,i=i.animate,n=a.isTop,o=a.isGradient,s=a.topColor,l=a.sideTexture,a=a.sideAddTexture,i=i.animType,u=r.blendingType,c=r.depthWrite,r=r.depthTest,d=l.sideTexColor,l=l.uvScale1,a=a.uvScale2,u=(this.material.blending=p[u],this.material.depthWrite=c,this.material.depthTest=r,this.material.defines.USE_TOP=n,this.material.defines.USE_GRADIENT=o,this.material.defines.USE_ANIMTYPE="horizontal"===i,f.Chroma(s).gl()),c=f.Chroma(d).gl();this.material.uniforms.u_top_color.value.set(u[0],u[1],u[2],u[3]),this.material.uniforms.u_side_tex_color.value.set(c[0],c[1],c[2],c[3]),this.material.uniforms.u_uvscale1.value.set(l.x,l.y),this.material.uniforms.u_uvscale2.value.set(a.x,a.y),this.material.needsUpdate=!0,f.easyDiff(t.options.general.offsetHeight,e.options.general.offsetHeight)&&f.easyDiff(t.options.general.geofenceHeight,e.options.general.geofenceHeight)||this.setData(this.data),f.easyDiff(t.sceneId.length,e.sceneId.length)&&f.deepDiff(t.sceneId,e.sceneId)||this.updateSceneId(),this.checkVisible()}},{key:"clear",value:function(){v(b(u.prototype),"clear",this).call(this),this.meshMap&&this.meshMap.clear(),this.highlightedMeshArr.length=0,this.material&&this.material.dispose(),this.promiseList=[],this.data=null,this.data2draw.length=0}},{key:"destroy",value:function(){this.clear(),v(b(u.prototype),"destroy",this).call(this)}}])&&h(t.prototype,i),o&&h(t,o),Object.defineProperty(t,"prototype",{writable:!1}),u},e.exports});;
Cube("datav:/com/@datav-city-pro-v2/datav-engine-geofence/2.2.5",["datav:/npm/eventemitter3/3.0.0"],function(e,t,r,n,o,i){function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function c(e,t){return(c=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function u(r){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}();return function(){var e,t=s(r),t=(e=n?(e=s(this).constructor,Reflect.construct(t,arguments,e)):t.apply(this,arguments),this);if(e&&("object"===a(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");if(void 0!==t)return t;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var y=r("datav:/npm/eventemitter3/3.0.0"),f=r("datav:/com/@datav-city-pro-v2/datav-engine-geofence/2.2.5/geofence"),r=function(){var e=o,t=y;if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&c(e,t);var r,n=u(o);function o(e,t){var r;if(this instanceof o)return(r=n.call(this)).options=t,r.comId="",r.type="Geofence",r.isActived=!1,r;throw new TypeError("Cannot call a class as a function")}return e=o,(t=[{key:"addTo",value:function(e,t){return this.cityproCore=e,this.comId=t,this.initLayer()}},{key:"initLayer",value:function(){var e=f(this.cityproCore);return this.layer=new e(this.options),this.cityproCore.viewer.addLayer(this.comId,this.layer)}},{key:"setData",value:function(e){this.layer&&this.layer.setData(e)}},{key:"errorRender",value:function(){console.log("地理围栏组件数据错误"),this.layer&&this.layer.dataErrorHandler()}},{key:"active",value:function(e,t){var r={clickPosition:{x:e.offsetX,y:e.offsetY},data:t?{geojson:t.object.userData.geojson,center:t.object.userData.center}:{}};return 0===e.button&&(this.emit("leftClick",r),this.layer.active(t.object),this.isActived=!0),this.isActived}},{key:"inactive",value:function(){this.isActived&&this.layer&&this.layer.inactive&&this.layer.inactive(),this.isActived=!1}},{key:"highlight",value:function(){var e=(0<arguments.length&&void 0!==arguments[0]?arguments[0]:{}).ids;this.layer.highlight(e)}},{key:"unhighlight",value:function(){this.layer.unhightlight()}},{key:"updateSideColor",value:function(e){this.layer&&this.layer.updateSideColor(e)}},{key:"sideColorInOption",value:function(){return this.layer.getSideColorInOption()}},{key:"enableInteractiveHandler",value:function(e){this.layer.enableInteractiveHandler(e)}},{key:"interactiveColorHandler",value:function(e){this.layer.interactiveColorHandler(e)}},{key:"sideTextureUrlHandler",value:function(e){this.layer.sideTextureUrlHandler(e)}},{key:"sideAddTextureUrlHandler",value:function(e){this.layer.sideAddTextureUrlHandler(e)}},{key:"updateOptions",value:function(e){this.layer&&this.layer.updateOptions&&this.layer.updateOptions(e)}},{key:"getThemableConfig",value:function(e){return{color:e.area.geofenceColor}}},{key:"show",value:function(){this.layer&&this.layer.show&&this.layer.show()}},{key:"hide",value:function(){this.layer&&this.layer.hide&&this.layer.hide()}},{key:"remove",value:function(){this.clear(),console.log("remove is duplicate, please use clear instead.")}},{key:"clear",value:function(){this.layer&&this.layer.clear&&this.layer.clear()}},{key:"destroy",value:function(){this.layer&&this.layer.destroy&&this.layer.destroy()}}])&&l(e.prototype,t),r&&l(e,r),Object.defineProperty(e,"prototype",{writable:!1}),o}();return e.exports=r,e.exports});